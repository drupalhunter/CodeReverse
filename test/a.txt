///////////////////////////////////////////////
// CodeReverse 0.1.4 (32-bit) for gcc        //
// https://github.com/katahiromz/CodeReverse //
// katayama.hirofumi.mz@gmail.com            //
///////////////////////////////////////////////

Command Line: coderev intrinsic.exe
FileName: intrinsic.exe, FileSize: 0x0000ABEB (44011)

### DOS Header ###
  e_magic: 0x5A4D
  e_cblp: 0x0090
  e_cp: 0x0003
  e_crlc: 0x0000
  e_cparhdr: 0x0004
  e_minalloc: 0x0000
  e_maxalloc: 0xFFFF
  e_ss: 0x0000
  e_sp: 0x00B8
  e_csum: 0x0000
  e_ip: 0x0000
  e_cs: 0x0000
  e_lfarlc: 0x0040
  e_ovno: 0x0000
  e_res[0]: 0x0000
  e_res[1]: 0x0000
  e_res[2]: 0x0000
  e_res[3]: 0x0000
  e_oemid: 0x0000
  e_oeminfo: 0x0000
  e_res2[0]: 0x0000
  e_res2[1]: 0x0000
  e_res2[2]: 0x0000
  e_res2[3]: 0x0000
  e_res2[4]: 0x0000
  e_res2[5]: 0x0000
  e_res2[6]: 0x0000
  e_res2[7]: 0x0000
  e_res2[8]: 0x0000
  e_res2[9]: 0x0000
  e_lfanew: 0x00000080

### IMAGE_FILE_HEADER ###
  Machine: 0x014C (IMAGE_FILE_MACHINE_I386)
  NumberOfSections: 0x000E (14)
  TimeDateStamp: 0x537458AC (Thu May 15 06:03:24 2014)
  PointerToSymbolTable: 0x00004C00
  NumberOfSymbols: 0x00000438 (1080)
  SizeOfOptionalHeader: 0x00E0 (224)
  Characteristics: 0x0106 (IMAGE_FILE_EXECUTABLE_IMAGE IMAGE_FILE_LINE_NUMS_STRIPPED IMAGE_FILE_32BIT_MACHINE)

### IMAGE_OPTIONAL_HEADER32 ###
  Magic: 0x010B
  LinkerVersion: 2.23
  SizeOfCode: 0x00001C00 (7168)
  SizeOfInitializedData: 0x00003400 (13312)
  SizeOfUninitializedData: 0x00000400 (1024)
  AddressOfEntryPoint: 0x000014E0
  BaseOfCode: 0x00001000
  BaseOfData: 0x00003000
  ImageBase: 0x00400000
  SectionAlignment: 0x00001000
  FileAlignment: 0x00000200
  OperatingSystemVersion: 4.0
  ImageVersion: 1.0
  SubsystemVersion: 4.0
  Win32VersionValue: 0x00000000
  SizeOfImage: 0x00010000 (65536)
  SizeOfHeaders: 0x00000400 (1024)
  CheckSum: 0x0000DDA2 (valid)
  Subsystem: 0x0003 (IMAGE_SUBSYSTEM_WINDOWS_CUI)
  DllCharacteristics: 0x0000 ()
  SizeOfStackReserve: 0x00200000 (2097152)
  SizeOfStackCommit: 0x00001000 (4096)
  SizeOfHeapReserve: 0x00100000 (1048576)
  SizeOfHeapCommit: 0x00001000 (4096)
  LoaderFlags: 0x00000000
  NumberOfRvaAndSizes: 0x00000010 (16)

  ### Directory Entries ###
    IMAGE_DIRECTORY_ENTRY_EXPORT (0): V.A.: 0x00006000, Size: 0x0000011F (287)
    IMAGE_DIRECTORY_ENTRY_IMPORT (1): V.A.: 0x00007000, Size: 0x00000688 (1672)
    IMAGE_DIRECTORY_ENTRY_BASERELOC (5): V.A.: 0x0000A000, Size: 0x00000298 (664)
    IMAGE_DIRECTORY_ENTRY_TLS (9): V.A.: 0x00009000, Size: 0x00000018 (24)
    IMAGE_DIRECTORY_ENTRY_IAT (12): V.A.: 0x0000712C, Size: 0x000000F0 (240)

### Section #0 ###
  Name: .text
  VirtualSize: 0x00001B64 (7012)
  RVA: 0x00001000
  SizeOfRawData: 0x00001C00 (7168)
  PointerToRawData: 0x00000400
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x60500060 (IMAGE_SCN_CNT_CODE IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_16BYTES IMAGE_SCN_MEM_EXECUTE IMAGE_SCN_MEM_READ)

### Section #1 ###
  Name: .data
  VirtualSize: 0x00000034 (52)
  RVA: 0x00003000
  SizeOfRawData: 0x00000200 (512)
  PointerToRawData: 0x00002000
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0xC0300040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_4BYTES IMAGE_SCN_MEM_READ IMAGE_SCN_MEM_WRITE)

### Section #2 ###
  Name: .rdata
  VirtualSize: 0x00000354 (852)
  RVA: 0x00004000
  SizeOfRawData: 0x00000400 (1024)
  PointerToRawData: 0x00002200
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x40300040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_4BYTES IMAGE_SCN_MEM_READ)

### Section #3 ###
  Name: .bss
  VirtualSize: 0x000003F0 (1008)
  RVA: 0x00005000
  SizeOfRawData: 0x00000000 (0)
  PointerToRawData: 0x00000000
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0xC0600080 (IMAGE_SCN_CNT_UNINITIALIZED_DATA IMAGE_SCN_ALIGN_32BYTES IMAGE_SCN_MEM_READ IMAGE_SCN_MEM_WRITE)

### Section #4 ###
  Name: .edata
  VirtualSize: 0x0000011F (287)
  RVA: 0x00006000
  SizeOfRawData: 0x00000200 (512)
  PointerToRawData: 0x00002600
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x40300040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_4BYTES IMAGE_SCN_MEM_READ)

### Section #5 ###
  Name: .idata
  VirtualSize: 0x00000688 (1672)
  RVA: 0x00007000
  SizeOfRawData: 0x00000800 (2048)
  PointerToRawData: 0x00002800
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0xC0300040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_4BYTES IMAGE_SCN_MEM_READ IMAGE_SCN_MEM_WRITE)

### Section #6 ###
  Name: .CRT
  VirtualSize: 0x00000034 (52)
  RVA: 0x00008000
  SizeOfRawData: 0x00000200 (512)
  PointerToRawData: 0x00003000
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0xC0300040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_4BYTES IMAGE_SCN_MEM_READ IMAGE_SCN_MEM_WRITE)

### Section #7 ###
  Name: .tls
  VirtualSize: 0x00000020 (32)
  RVA: 0x00009000
  SizeOfRawData: 0x00000200 (512)
  PointerToRawData: 0x00003200
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0xC0300040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_4BYTES IMAGE_SCN_MEM_READ IMAGE_SCN_MEM_WRITE)

### Section #8 ###
  Name: .reloc
  VirtualSize: 0x00000298 (664)
  RVA: 0x0000A000
  SizeOfRawData: 0x00000400 (1024)
  PointerToRawData: 0x00003400
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x42300040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_4BYTES IMAGE_SCN_MEM_DISCARDABLE IMAGE_SCN_MEM_READ)

### Section #9 ###
  Name: /4
  VirtualSize: 0x00000038 (56)
  RVA: 0x0000B000
  SizeOfRawData: 0x00000200 (512)
  PointerToRawData: 0x00003800
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x42400040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_8BYTES IMAGE_SCN_MEM_DISCARDABLE IMAGE_SCN_MEM_READ)

### Section #10 ###
  Name: /19
  VirtualSize: 0x00000BA2 (2978)
  RVA: 0x0000C000
  SizeOfRawData: 0x00000C00 (3072)
  PointerToRawData: 0x00003A00
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x42100040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_1BYTES IMAGE_SCN_MEM_DISCARDABLE IMAGE_SCN_MEM_READ)

### Section #11 ###
  Name: /31
  VirtualSize: 0x00000087 (135)
  RVA: 0x0000D000
  SizeOfRawData: 0x00000200 (512)
  PointerToRawData: 0x00004600
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x42100040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_1BYTES IMAGE_SCN_MEM_DISCARDABLE IMAGE_SCN_MEM_READ)

### Section #12 ###
  Name: /45
  VirtualSize: 0x00000115 (277)
  RVA: 0x0000E000
  SizeOfRawData: 0x00000200 (512)
  PointerToRawData: 0x00004800
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x42100040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_1BYTES IMAGE_SCN_MEM_DISCARDABLE IMAGE_SCN_MEM_READ)

### Section #13 ###
  Name: /57
  VirtualSize: 0x00000038 (56)
  RVA: 0x0000F000
  SizeOfRawData: 0x00000200 (512)
  PointerToRawData: 0x00004A00
  PointerToRelocations: 0x00000000
  PointerToLinenumbers: 0x00000000
  NumberOfRelocations: 0x00000000 (0)
  NumberOfLinenumbers: 0x00000000 (0)
  Characteristics: 0x42300040 (IMAGE_SCN_CNT_INITIALIZED_DATA IMAGE_SCN_ALIGN_4BYTES IMAGE_SCN_MEM_DISCARDABLE IMAGE_SCN_MEM_READ)

### IMPORTS ###
  Characteristics: 0x0000703C
  TimeDateStamp: 0x00000000 (NULL)
  ForwarderChain: 0x00000000
  Name: 0x000075E0 (KERNEL32.dll)
  
  KERNEL32.dll
    RVA      VA       HINT FUNCTION NAME
    0000712C 0040712C   D4 DeleteCriticalSection
    00007130 00407130   EF EnterCriticalSection
    00007134 00407134  1C4 GetCurrentProcess
    00007138 00407138  1C5 GetCurrentProcessId
    0000713C 0040713C  1C9 GetCurrentThreadId
    00007140 00407140  203 GetLastError
    00007144 00407144  215 GetModuleHandleA
    00007148 00407148  245 GetProcAddress
    0000714C 0040714C  264 GetStartupInfoA
    00007150 00407150  27B GetSystemTimeAsFileTime
    00007154 00407154  297 GetTickCount
    00007158 00407158  2EB InitializeCriticalSection
    0000715C 0040715C  2F2 InterlockedCompareExchange
    00007160 00407160  2F4 InterlockedExchange
    00007164 00407164  326 LeaveCriticalSection
    00007168 00407168  393 QueryPerformanceCounter
    0000716C 0040716C  467 SetUnhandledExceptionFilter
    00007170 00407170  474 Sleep
    00007174 00407174  482 TerminateProcess
    00007178 00407178  489 TlsGetValue
    0000717C 0040717C  496 UnhandledExceptionFilter
    00007180 00407180  4B6 VirtualProtect
    00007184 00407184  4B9 VirtualQuery
  
  msvcrt.dll
    RVA      VA       HINT FUNCTION NAME
    0000718C 0040718C   37 __dllonexit
    00007190 00407190   3A __getmainargs
    00007194 00407194   3B __initenv
    00007198 00407198   44 __lconv_init
    0000719C 0040719C   68 __set_app_type
    000071A0 004071A0   6B __setusermatherr
    000071A4 004071A4   7A _acmdln
    000071A8 004071A8   90 _amsg_exit
    000071AC 004071AC   A1 _cexit
    000071B0 004071B0  111 _fmode
    000071B4 004071B4  15D _initterm
    000071B8 004071B8  161 _iob
    000071BC 004071BC  1CA _lock
    000071C0 004071C0  271 _onexit
    000071C4 004071C4  30B _strset
    000071C8 004071C8  346 _unlock
    000071CC 004071CC  41E abort
    000071D0 004071D0  42B calloc
    000071D4 004071D4  436 exit
    000071D8 004071D8  446 fprintf
    000071DC 004071DC  44D free
    000071E0 004071E0  458 fwrite
    000071E4 004071E4  487 malloc
    000071E8 004071E8  48E memcmp
    000071EC 004071EC  48F memcpy
    000071F0 004071F0  492 memset
    000071F4 004071F4  497 printf
    000071F8 004071F8  49B puts
    000071FC 004071FC  4AB signal
    00007200 00407200  4B4 strcat
    00007204 00407204  4B7 strcmp
    00007208 00407208  4BF strlen
    0000720C 0040720C  4C2 strncmp
    00007210 00407210  4C3 strncpy
    00007214 00407214  4E3 vfprintf
  

### EXPORTS ###
  Characteristics: 0x00000000
  TimeDateStamp: 0x537458AC (Thu May 15 06:03:24 2014)
  Version: 0.0
  Name: 0x000060A0 (intrinsic.exe)
  Base: 0x00000001 (1)
  NumberOfFunctions: 0x0000000C (12)
  NumberOfNames: 0x0000000C (12)
  AddressOfFunctions: 0x00006028
  AddressOfNames: 0x00006058
  AddressOfNameOrdinals: 0x00006088
  
  FUNCTION NAME                                      ORDI. ; RVA      VA      
  main                                               @1    ; 0000168F 0040168F
  my__strset                                         @2    ; 00001574 00401574
  my_abs                                             @3    ; 00001560 00401560
  my_labs                                            @4    ; 0000156A 0040156A
  my_memcmp                                          @5    ; 0000158F 0040158F
  my_memcpy                                          @6    ; 000015B2 004015B2
  my_memset                                          @7    ; 000015D5 004015D5
  my_strcat                                          @8    ; 000015F8 004015F8
  my_strcmp                                          @9    ; 00001613 00401613
  my_strlen                                          @10   ; 0000162E 0040162E
  my_strncmp                                         @11   ; 00001646 00401646
  my_strncpy                                         @12   ; 00001669 00401669



### RESOURCE ###
  No resource data


### DELAY LOAD ###
  ### Descr #0 ###
    NAME       RVA      VA      
    Attrs:     00905A4D 00D05A4D
    DLL Name:  
            :  00000003 00400003
    Module:    00000004 00400004
    IAT:       0000FFFF 0040FFFF
    INT:       000000B8 004000B8
    BoundIAT:  00000000 00400000
    UnloadIAT: 00000040 00400040
    dwTimeStamp:  0x00000000 (NULL)


### TYPES ###
typedef struct struct _iobuf FILE;
typedef struct struct tagLC_ID { unsigned short wLanguage; unsigned short wCountry; unsigned short wCodePage; } LC_ID;
typedef struct tagLC_ID* LPLC_ID;
typedef va_list __gnuc_va_list;
typedef long __time32_t;
typedef long __time64_t;
typedef struct localeinfo_struct* _locale_t;
typedef struct struct localeinfo_struct { pthreadlocinfo locinfo; pthreadmbcinfo mbcinfo; } _locale_tstruct;
typedef long _off64_t;
typedef long _off_t;
typedef int errno_t;
typedef long fpos_t;
typedef int intptr_t;
typedef long off32_t;
typedef long off64_t;
typedef off32_t off_t;
typedef struct threadlocaleinfostruct* pthreadlocinfo;
typedef struct threadmbcinfostruct* pthreadmbcinfo;
typedef int ptrdiff_t;
typedef size_t rsize_t;
typedef unsigned int size_t;
typedef int ssize_t;
typedef struct struct threadlocaleinfostruct { int refcount; unsigned int lc_codepage; unsigned int lc_collate_cp; unsigned long lc_handle[1]; LC_ID lc_id[1]; struct  { char* locale; wchar_t* wlocale; int* refcount; int* wrefcount; } lc_category[1]; int lc_clike; int mb_cur_max; int* lconv_intl_refcount; int* lconv_num_refcount; int* lconv_mon_refcount; struct lconv* lconv; int* ctype1_refcount; unsigned short* ctype1; const unsigned short* pctype; const unsigned char* pclmap; const unsigned char* pcumap; struct __lc_time_data* lc_time_curr; } threadlocinfo;
typedef __time32_t time_t;
typedef unsigned int uintptr_t;
typedef __gnuc_va_list va_list;
typedef unsigned short wchar_t;
typedef unsigned short wctype_t;
typedef unsigned short wint_t;


### VARIABLES ###
void  __cdecl __debugbreak(void );
const char*   __mingw_get_crt_info(void );
FILE (*_imp___iob)[];
int  __cdecl __mingw_sscanf(const char* _Src, const char* _Format, ...);
int  __cdecl __mingw_vsscanf(const char* _Str, const char* Format, va_list argp);
int  __cdecl __mingw_scanf(const char* _Format, ...);
int  __cdecl __mingw_vscanf(const char* Format, va_list argp);
int  __cdecl __mingw_fscanf(FILE* _File, const char* _Format, ...);
int  __cdecl __mingw_vfscanf(FILE* fp, const char* Format, va_list argp);
int  __cdecl __mingw_vsnprintf(char* _DstBuf, size_t _MaxCount, const char* _Format, va_list _ArgList);
int  __cdecl __mingw_snprintf(char* s, size_t n, const char* format, ...);
int  __cdecl __mingw_printf(const char* , ...);
int  __cdecl __mingw_vprintf(const char* , va_list );
int  __cdecl __mingw_fprintf(FILE* , const char* , ...);
int  __cdecl __mingw_vfprintf(FILE* , const char* , va_list );
int  __cdecl __mingw_sprintf(char* , const char* , ...);
int  __cdecl __mingw_vsprintf(char* , const char* , va_list );
int  __cdecl __mingw_asprintf(char** , const char* , ...);
int  __cdecl __mingw_vasprintf(char** , const char* , va_list );
int  __cdecl fprintf(FILE* _File, const char* _Format, ...);
int  __cdecl printf(const char* _Format, ...);
int  __cdecl sprintf(char* _Dest, const char* _Format, ...);
int  __cdecl vfprintf(FILE* _File, const char* _Format, va_list _ArgList);
int  __cdecl vprintf(const char* _Format, va_list _ArgList);
int  __cdecl vsprintf(char* _Dest, const char* _Format, va_list _Args);
int  __cdecl fscanf(FILE* _File, const char* _Format, ...);
int  __cdecl scanf(const char* _Format, ...);
int  __cdecl sscanf(const char* _Src, const char* _Format, ...);
int  __cdecl __ms_vscanf(const char* Format, va_list argp);
int  __cdecl __ms_vfscanf(FILE* fp, const char* Format, va_list argp);
int  __cdecl __ms_vsscanf(const char* _Str, const char* Format, va_list argp);
int  __cdecl _filbuf(FILE* _File);
int  __cdecl _flsbuf(int _Ch, FILE* _File);
FILE*  __cdecl _fsopen(const char* _Filename, const char* _Mode, int _ShFlag);
void  __cdecl clearerr(FILE* _File);
int  __cdecl fclose(FILE* _File);
int  __cdecl _fcloseall(void );
FILE*  __cdecl _fdopen(int _FileHandle, const char* _Mode);
int  __cdecl feof(FILE* _File);
int  __cdecl ferror(FILE* _File);
int  __cdecl fflush(FILE* _File);
int  __cdecl fgetc(FILE* _File);
int  __cdecl _fgetchar(void );
int  __cdecl fgetpos(FILE* _File, fpos_t* _Pos);
int  __cdecl fgetpos64(FILE* _File, fpos_t* _Pos);
char*  __cdecl fgets(char* _Buf, int _MaxCount, FILE* _File);
int  __cdecl _fileno(FILE* _File);
char*  __cdecl _tempnam(const char* _DirName, const char* _FilePrefix);
int  __cdecl _flushall(void );
FILE*  __cdecl fopen(const char* _Filename, const char* _Mode);
FILE*   fopen64(const char* filename, const char* mode);
int  __cdecl fputc(int _Ch, FILE* _File);
int  __cdecl _fputchar(int _Ch);
int  __cdecl fputs(const char* _Str, FILE* _File);
size_t  __cdecl fread(void* _DstBuf, size_t _ElementSize, size_t _Count, FILE* _File);
FILE*  __cdecl freopen(const char* _Filename, const char* _Mode, FILE* _File);
int  __cdecl _fscanf_l(FILE* _File, const char* _Format, _locale_t locale, ...);
int  __cdecl fsetpos(FILE* _File, fpos_t* _Pos);
int  __cdecl fsetpos64(FILE* _File, fpos_t* _Pos);
int  __cdecl fseek(FILE* _File, long _Offset, int _Origin);
int   fseeko64(FILE* stream, _off64_t offset, int whence);
int   fseeko(FILE* stream, _off_t offset, int whence);
long  __cdecl ftell(FILE* _File);
_off_t   ftello(FILE* stream);
_off64_t   ftello64(FILE* stream);
int  __cdecl _fseeki64(FILE* _File, long _Offset, int _Origin);
long  __cdecl _ftelli64(FILE* _File);
size_t  __cdecl fwrite(const void* _Str, size_t _Size, size_t _Count, FILE* _File);
int  __cdecl getc(FILE* _File);
int  __cdecl getchar(void );
int  __cdecl _getmaxstdio(void );
char*  __cdecl gets(char* _Buffer);
int  __cdecl _getw(FILE* _File);
void  __cdecl perror(const char* _ErrMsg);
int  __cdecl _pclose(FILE* _File);
FILE*  __cdecl _popen(const char* _Command, const char* _Mode);
int  __cdecl putc(int _Ch, FILE* _File);
int  __cdecl putchar(int _Ch);
int  __cdecl puts(const char* _Str);
int  __cdecl _putw(int _Word, FILE* _File);
int  __cdecl remove(const char* _Filename);
int  __cdecl rename(const char* _OldFilename, const char* _NewFilename);
int  __cdecl _unlink(const char* _Filename);
int  __cdecl unlink(const char* _Filename);
void  __cdecl rewind(FILE* _File);
int  __cdecl _rmtmp(void );
int  __cdecl _scanf_l(const char* format, _locale_t locale, ...);
void  __cdecl setbuf(FILE* _File, char* _Buffer);
int  __cdecl _setmaxstdio(int _Max);
unsigned int  __cdecl _set_output_format(unsigned int _Format);
unsigned int  __cdecl _get_output_format(void );
int  __cdecl setvbuf(FILE* _File, char* _Buf, int _Mode, size_t _Size);
int  __cdecl _scprintf(const char* _Format, ...);
int  __cdecl _sscanf_l(const char* buffer, const char* format, _locale_t locale, ...);
int  __cdecl _snscanf(const char* _Src, size_t _MaxCount, const char* _Format, ...);
int  __cdecl _snscanf_l(const char* input, size_t length, const char* format, _locale_t locale, ...);
FILE*  __cdecl tmpfile(void );
char*  __cdecl tmpnam(char* _Buffer);
int  __cdecl ungetc(int _Ch, FILE* _File);
int  __cdecl _snprintf(char* _Dest, size_t _Count, const char* _Format, ...);
int  __cdecl _snprintf_l(char* buffer, size_t count, const char* format, _locale_t locale, ...);
int  __cdecl _vsnprintf(char* _Dest, size_t _Count, const char* _Format, va_list _Args);
int  __cdecl _vsnprintf_l(char* buffer, size_t count, const char* format, _locale_t locale, va_list argptr);
int  __cdecl _sprintf_l(char* buffer, const char* format, _locale_t locale, ...);
int  __cdecl __ms_vsnprintf(char* d, size_t n, const char* format, va_list arg);
int  __cdecl __ms_snprintf(char* s, size_t n, const char* format, ...);
int  __cdecl _vscprintf(const char* _Format, va_list _ArgList);
int  __cdecl _set_printf_count_output(int _Value);
int  __cdecl _get_printf_count_output(void );
int  __cdecl __mingw_swscanf(wchar_t* _Src, wchar_t* _Format, ...);
int  __cdecl __mingw_vswscanf(wchar_t* _Str, wchar_t* Format, va_list argp);
int  __cdecl __mingw_wscanf(wchar_t* _Format, ...);
int  __cdecl __mingw_vwscanf(wchar_t* Format, va_list argp);
int  __cdecl __mingw_fwscanf(FILE* _File, wchar_t* _Format, ...);
int  __cdecl __mingw_vfwscanf(FILE* fp, wchar_t* Format, va_list argp);
int  __cdecl __mingw_fwprintf(FILE* _File, wchar_t* _Format, ...);
int  __cdecl __mingw_wprintf(wchar_t* _Format, ...);
int  __cdecl __mingw_vfwprintf(FILE* _File, wchar_t* _Format, va_list _ArgList);
int  __cdecl __mingw_vwprintf(wchar_t* _Format, va_list _ArgList);
int  __cdecl __mingw_snwprintf(wchar_t* s, size_t n, wchar_t* format, ...);
int  __cdecl __mingw_vsnwprintf(wchar_t* , size_t , wchar_t* , va_list );
int  __cdecl __mingw_swprintf(wchar_t* , wchar_t* , ...);
int  __cdecl __mingw_vswprintf(wchar_t* , wchar_t* , va_list );
int  __cdecl fwscanf(FILE* _File, wchar_t* _Format, ...);
int  __cdecl swscanf(wchar_t* _Src, wchar_t* _Format, ...);
int  __cdecl wscanf(wchar_t* _Format, ...);
int  __cdecl __ms_vwscanf(wchar_t* , va_list );
int  __cdecl __ms_vfwscanf(FILE* , wchar_t* , va_list );
int  __cdecl __ms_vswscanf(wchar_t* , wchar_t* , va_list );
int  __cdecl fwprintf(FILE* _File, wchar_t* _Format, ...);
int  __cdecl wprintf(wchar_t* _Format, ...);
int  __cdecl vfwprintf(FILE* _File, wchar_t* _Format, va_list _ArgList);
int  __cdecl vwprintf(wchar_t* _Format, va_list _ArgList);
FILE*  __cdecl _wfsopen(wchar_t* _Filename, wchar_t* _Mode, int _ShFlag);
wint_t  __cdecl fgetwc(FILE* _File);
wint_t  __cdecl _fgetwchar(void );
wint_t  __cdecl fputwc(wchar_t _Ch, FILE* _File);
wint_t  __cdecl _fputwchar(wchar_t _Ch);
wint_t  __cdecl getwc(FILE* _File);
wint_t  __cdecl getwchar(void );
wint_t  __cdecl putwc(wchar_t _Ch, FILE* _File);
wint_t  __cdecl putwchar(wchar_t _Ch);
wint_t  __cdecl ungetwc(wint_t _Ch, FILE* _File);
wchar_t*  __cdecl fgetws(wchar_t* _Dst, int _SizeInWords, FILE* _File);
int  __cdecl fputws(wchar_t* _Str, FILE* _File);
wchar_t*  __cdecl _getws(wchar_t* _String);
int  __cdecl _putws(wchar_t* _Str);
int  __cdecl _scwprintf(wchar_t* _Format, ...);
int  __cdecl _swprintf_l(wchar_t* buffer, size_t count, wchar_t* format, _locale_t locale, ...);
int  __cdecl _swprintf_c(wchar_t* _DstBuf, size_t _SizeInWords, wchar_t* _Format, ...);
int  __cdecl _vswprintf_c(wchar_t* _DstBuf, size_t _SizeInWords, wchar_t* _Format, va_list _ArgList);
int  __cdecl _snwprintf(wchar_t* _Dest, size_t _Count, wchar_t* _Format, ...);
int  __cdecl _vsnwprintf(wchar_t* _Dest, size_t _Count, wchar_t* _Format, va_list _Args);
int  __cdecl __ms_snwprintf(wchar_t* s, size_t n, wchar_t* format, ...);
int  __cdecl __ms_vsnwprintf(wchar_t* , size_t , wchar_t* , va_list );
int  __cdecl _fwprintf_p(FILE* _File, wchar_t* _Format, ...);
int  __cdecl _wprintf_p(wchar_t* _Format, ...);
int  __cdecl _vfwprintf_p(FILE* _File, wchar_t* _Format, va_list _ArgList);
int  __cdecl _vwprintf_p(wchar_t* _Format, va_list _ArgList);
int  __cdecl _swprintf_p(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, ...);
int  __cdecl _vswprintf_p(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, va_list _ArgList);
int  __cdecl _scwprintf_p(wchar_t* _Format, ...);
int  __cdecl _vscwprintf_p(wchar_t* _Format, va_list _ArgList);
int  __cdecl _wprintf_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _wprintf_p_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vwprintf_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vwprintf_p_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _fwprintf_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _fwprintf_p_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vfwprintf_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vfwprintf_p_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _swprintf_c_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _swprintf_p_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vswprintf_c_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vswprintf_p_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _scwprintf_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _scwprintf_p_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vscwprintf_p_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _snwprintf_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vsnwprintf_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _swprintf(wchar_t* _Dest, wchar_t* _Format, ...);
int  __cdecl _vswprintf(wchar_t* _Dest, wchar_t* _Format, va_list _Args);
int  __cdecl __swprintf_l(wchar_t* _Dest, wchar_t* _Format, _locale_t _Plocinfo, ...);
int  __cdecl _vswprintf_l(wchar_t* buffer, size_t count, wchar_t* format, _locale_t locale, va_list argptr);
int  __cdecl __vswprintf_l(wchar_t* _Dest, wchar_t* _Format, _locale_t _Plocinfo, va_list _Args);
wchar_t*  __cdecl _wtempnam(wchar_t* _Directory, wchar_t* _FilePrefix);
int  __cdecl _vscwprintf(wchar_t* _Format, va_list _ArgList);
int  __cdecl _vscwprintf_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _fwscanf_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _swscanf_l(wchar_t* _Src, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _snwscanf(wchar_t* _Src, size_t _MaxCount, wchar_t* _Format, ...);
int  __cdecl _snwscanf_l(wchar_t* _Src, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _wscanf_l(wchar_t* _Format, _locale_t _Locale, ...);
FILE*  __cdecl _wfdopen(int _FileHandle, wchar_t* _Mode);
FILE*  __cdecl _wfopen(wchar_t* _Filename, wchar_t* _Mode);
FILE*  __cdecl _wfreopen(wchar_t* _Filename, wchar_t* _Mode, FILE* _OldFile);
void  __cdecl _wperror(wchar_t* _ErrMsg);
FILE*  __cdecl _wpopen(wchar_t* _Command, wchar_t* _Mode);
int  __cdecl _wremove(wchar_t* _Filename);
wchar_t*  __cdecl _wtmpnam(wchar_t* _Buffer);
wint_t  __cdecl _fgetwc_nolock(FILE* _File);
wint_t  __cdecl _fputwc_nolock(wchar_t _Ch, FILE* _File);
wint_t  __cdecl _ungetwc_nolock(wint_t _Ch, FILE* _File);
void  __cdecl _lock_file(FILE* _File);
void  __cdecl _unlock_file(FILE* _File);
int  __cdecl _fclose_nolock(FILE* _File);
int  __cdecl _fflush_nolock(FILE* _File);
size_t  __cdecl _fread_nolock(void* _DstBuf, size_t _ElementSize, size_t _Count, FILE* _File);
int  __cdecl _fseek_nolock(FILE* _File, long _Offset, int _Origin);
long  __cdecl _ftell_nolock(FILE* _File);
int  __cdecl _fseeki64_nolock(FILE* _File, long _Offset, int _Origin);
long  __cdecl _ftelli64_nolock(FILE* _File);
size_t  __cdecl _fwrite_nolock(const void* _DstBuf, size_t _Size, size_t _Count, FILE* _File);
int  __cdecl _ungetc_nolock(int _Ch, FILE* _File);
char*  __cdecl tempnam(const char* _Directory, const char* _FilePrefix);
int  __cdecl fcloseall(void );
FILE*  __cdecl fdopen(int _FileHandle, const char* _Format);
int  __cdecl fgetchar(void );
int  __cdecl fileno(FILE* _File);
int  __cdecl flushall(void );
int  __cdecl fputchar(int _Ch);
int  __cdecl getw(FILE* _File);
int  __cdecl putw(int _Ch, FILE* _File);
int  __cdecl rmtmp(void );
int  __cdecl __mingw_str_wide_utf8(wchar_t* const  wptr, char** mbptr, size_t* buflen);
int  __cdecl __mingw_str_utf8_wide(const char* const  mbptr, wchar_t** wptr, size_t* buflen);
void  __cdecl __mingw_str_free(void* ptr);
errno_t  __cdecl clearerr_s(FILE* _File);
int  __cdecl fprintf_s(FILE* _File, const char* _Format, ...);
size_t  __cdecl fread_s(void* _DstBuf, size_t _DstSize, size_t _ElementSize, size_t _Count, FILE* _File);
int  __cdecl _fscanf_s_l(FILE* _File, const char* _Format, _locale_t _Locale, ...);
int  __cdecl printf_s(const char* _Format, ...);
int  __cdecl _scanf_l(const char* _Format, _locale_t _Locale, ...);
int  __cdecl _scanf_s_l(const char* _Format, _locale_t _Locale, ...);
int  __cdecl _snprintf_c(char* _DstBuf, size_t _MaxCount, const char* _Format, ...);
int  __cdecl _vsnprintf_c(char* _DstBuf, size_t _MaxCount, const char* _Format, va_list _ArgList);
int  __cdecl sprintf_s(char* _DstBuf, size_t _DstSize, const char* _Format, ...);
int  __cdecl _fscanf_l(FILE* _File, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _sscanf_l(const char* _Src, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _sscanf_s_l(const char* _Src, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _snscanf_s(const char* _Src, size_t _MaxCount, const char* _Format, ...);
int  __cdecl _snscanf_l(const char* _Src, size_t _MaxCount, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _snscanf_s_l(const char* _Src, size_t _MaxCount, const char* _Format, _locale_t _Locale, ...);
int  __cdecl vfprintf_s(FILE* _File, const char* _Format, va_list _ArgList);
int  __cdecl vprintf_s(const char* _Format, va_list _ArgList);
int  __cdecl vsnprintf_s(char* _DstBuf, size_t _DstSize, size_t _MaxCount, const char* _Format, va_list _ArgList);
int  __cdecl _vsnprintf_s(char* _DstBuf, size_t _DstSize, size_t _MaxCount, const char* _Format, va_list _ArgList);
int  __cdecl vsprintf_s(char* _DstBuf, size_t _Size, const char* _Format, va_list _ArgList);
int  __cdecl _snprintf_s(char* _DstBuf, size_t _DstSize, size_t _MaxCount, const char* _Format, ...);
int  __cdecl _fprintf_p(FILE* _File, const char* _Format, ...);
int  __cdecl _printf_p(const char* _Format, ...);
int  __cdecl _sprintf_p(char* _Dst, size_t _MaxCount, const char* _Format, ...);
int  __cdecl _vfprintf_p(FILE* _File, const char* _Format, va_list _ArgList);
int  __cdecl _vprintf_p(const char* _Format, va_list _ArgList);
int  __cdecl _vsprintf_p(char* _Dst, size_t _MaxCount, const char* _Format, va_list _ArgList);
int  __cdecl _scprintf_p(const char* _Format, ...);
int  __cdecl _vscprintf_p(const char* _Format, va_list _ArgList);
int  __cdecl _printf_l(const char* _Format, _locale_t _Locale, ...);
int  __cdecl _printf_p_l(const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vprintf_l(const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vprintf_p_l(const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _fprintf_l(FILE* _File, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _fprintf_p_l(FILE* _File, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vfprintf_l(FILE* _File, const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vfprintf_p_l(FILE* _File, const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _sprintf_l(char* _DstBuf, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _sprintf_p_l(char* _DstBuf, size_t _MaxCount, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vsprintf_l(char* _DstBuf, const char* _Format, _locale_t , va_list _ArgList);
int  __cdecl _vsprintf_p_l(char* _DstBuf, size_t _MaxCount, const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _scprintf_l(const char* _Format, _locale_t _Locale, ...);
int  __cdecl _scprintf_p_l(const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vscprintf_l(const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vscprintf_p_l(const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _printf_s_l(const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vprintf_s_l(const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _fprintf_s_l(FILE* _File, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vfprintf_s_l(FILE* _File, const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _sprintf_s_l(char* _DstBuf, size_t _DstSize, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vsprintf_s_l(char* _DstBuf, size_t _DstSize, const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _snprintf_s_l(char* _DstBuf, size_t _DstSize, size_t _MaxCount, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vsnprintf_s_l(char* _DstBuf, size_t _DstSize, size_t _MaxCount, const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _snprintf_l(char* _DstBuf, size_t _MaxCount, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _snprintf_c_l(char* _DstBuf, size_t _MaxCount, const char* _Format, _locale_t _Locale, ...);
int  __cdecl _vsnprintf_l(char* _DstBuf, size_t _MaxCount, const char* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vsnprintf_c_l(char* _DstBuf, size_t _MaxCount, const char* , _locale_t _Locale, va_list _ArgList);
errno_t  __cdecl fopen_s(FILE** _File, const char* _Filename, const char* _Mode);
char*  __cdecl gets_s(char* , rsize_t );
errno_t  __cdecl tmpnam_s(char* , rsize_t );
wchar_t*  __cdecl _getws_s(wchar_t* _Str, size_t _SizeInWords);
int  __cdecl fwprintf_s(FILE* _File, wchar_t* _Format, ...);
int  __cdecl wprintf_s(wchar_t* _Format, ...);
int  __cdecl vfwprintf_s(FILE* _File, wchar_t* _Format, va_list _ArgList);
int  __cdecl vwprintf_s(wchar_t* _Format, va_list _ArgList);
int  __cdecl vswprintf_s(wchar_t* _Dst, size_t _SizeInWords, wchar_t* _Format, va_list _ArgList);
int  __cdecl swprintf_s(wchar_t* _Dst, size_t _SizeInWords, wchar_t* _Format, ...);
int  __cdecl _vsnwprintf_s(wchar_t* _DstBuf, size_t _DstSizeInWords, size_t _MaxCount, wchar_t* _Format, va_list _ArgList);
int  __cdecl _snwprintf_s(wchar_t* _DstBuf, size_t _DstSizeInWords, size_t _MaxCount, wchar_t* _Format, ...);
int  __cdecl _wprintf_s_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vwprintf_s_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _fwprintf_s_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vfwprintf_s_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _swprintf_s_l(wchar_t* _DstBuf, size_t _DstSize, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vswprintf_s_l(wchar_t* _DstBuf, size_t _DstSize, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _snwprintf_s_l(wchar_t* _DstBuf, size_t _DstSize, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vsnwprintf_s_l(wchar_t* _DstBuf, size_t _DstSize, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _fwscanf_s_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _swscanf_s_l(wchar_t* _Src, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _snwscanf_s(wchar_t* _Src, size_t _MaxCount, wchar_t* _Format, ...);
int  __cdecl _snwscanf_s_l(wchar_t* _Src, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _wscanf_s_l(wchar_t* _Format, _locale_t _Locale, ...);
errno_t  __cdecl _wfopen_s(FILE** _File, wchar_t* _Filename, wchar_t* _Mode);
errno_t  __cdecl _wfreopen_s(FILE** _File, wchar_t* _Filename, wchar_t* _Mode, FILE* _OldFile);
errno_t  __cdecl _wtmpnam_s(wchar_t* _DstBuf, size_t _SizeInWords);
int  __cdecl _fwprintf_p(FILE* _File, wchar_t* _Format, ...);
int  __cdecl _wprintf_p(wchar_t* _Format, ...);
int  __cdecl _vfwprintf_p(FILE* _File, wchar_t* _Format, va_list _ArgList);
int  __cdecl _vwprintf_p(wchar_t* _Format, va_list _ArgList);
int  __cdecl _swprintf_p(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, ...);
int  __cdecl _vswprintf_p(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, va_list _ArgList);
int  __cdecl _scwprintf_p(wchar_t* _Format, ...);
int  __cdecl _vscwprintf_p(wchar_t* _Format, va_list _ArgList);
int  __cdecl _wprintf_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _wprintf_p_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vwprintf_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vwprintf_p_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _fwprintf_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _fwprintf_p_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vfwprintf_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vfwprintf_p_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _swprintf_c_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _swprintf_p_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vswprintf_c_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _vswprintf_p_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _scwprintf_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _scwprintf_p_l(wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vscwprintf_p_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _snwprintf_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _vsnwprintf_l(wchar_t* _DstBuf, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl __swprintf_l(wchar_t* _Dest, wchar_t* _Format, _locale_t _Plocinfo, ...);
int  __cdecl __vswprintf_l(wchar_t* _Dest, wchar_t* _Format, _locale_t _Plocinfo, va_list _Args);
int  __cdecl _vscwprintf_l(wchar_t* _Format, _locale_t _Locale, va_list _ArgList);
int  __cdecl _fwscanf_l(FILE* _File, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _swscanf_l(wchar_t* _Src, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _snwscanf_l(wchar_t* _Src, size_t _MaxCount, wchar_t* _Format, _locale_t _Locale, ...);
int  __cdecl _wscanf_l(wchar_t* _Format, _locale_t _Locale, ...);
errno_t  __cdecl _wfopen_s(FILE** _File, wchar_t* _Filename, wchar_t* _Mode);
size_t  __cdecl _fread_nolock_s(void* _DstBuf, size_t _DstSize, size_t _ElementSize, size_t _Count, FILE* _File);


### DISASSEMBLY ###

;; Function EntryPoint @ L004014E0
ft = FT_CDECL, SizeOfStackArgs == 0
L00401180: 55                                  push ebp
L00401181: 31 C0                               xor eax,eax
L00401183: 89 E5                               mov ebp,esp
L00401185: B9 11 00 00 00                      mov ecx,0x11
L0040118A: 57                                  push edi
L0040118B: 56                                  push esi
L0040118C: 8D 55 A4                            lea edx,[ebp-0x5c]
L0040118F: 53                                  push ebx
L00401190: 89 D7                               mov edi,edx
L00401192: 83 EC 7C                            sub esp,124
L00401195: F3 AB                               rep stosd 
L00401197: B0 30                               mov al,0x30
L00401199: E8 42 18 00 00                      call L004029E0
L0040119E: 29 C4                               sub esp,eax
L004011A0: 8D 44 24 1B                         lea eax,[esp+0x1b]
L004011A4: 83 E0 F0                            and eax,-16
L004011A7: C7 00 CC CC CC CC                   mov dword [eax],0xCCCCCCCC
L004011AD: C7 40 04 CC CC CC CC                mov dword [eax+0x4],0xCCCCCCCC
L004011B4: C7 40 08 CC CC CC CC                mov dword [eax+0x8],0xCCCCCCCC
L004011BB: C7 40 0C CC CC CC CC                mov dword [eax+0xc],0xCCCCCCCC
L004011C2: C7 40 10 CC CC CC CC                mov dword [eax+0x10],0xCCCCCCCC
L004011C9: C7 40 14 CC CC CC CC                mov dword [eax+0x14],0xCCCCCCCC
L004011D0: C7 40 18 CC CC CC CC                mov dword [eax+0x18],0xCCCCCCCC
L004011D7: C7 40 1C CC CC CC CC                mov dword [eax+0x1c],0xCCCCCCCC
L004011DE: 83 E4 F0                            and esp,-16
L004011E1: A1 3C 50 40 00                      mov eax,M0040503C
L004011E6: 85 C0                               test eax,eax
L004011E8: 0F 85 92 02 00 00                   jnz L00401480
L004011EE: 64 A1 18 00 00 00                   mov eax,[fs:0x18]
L004011F4: 8B 35 5C 71 40 00                   mov esi,M0040715C
L004011FA: 8B 58 04                            mov ebx,[eax+0x4]
L004011FD: 8B 3D 70 71 40 00                   mov edi,M00407170
L00401203: EB 14                               jmp L00401219
L00401205: 39 D8                               cmp eax,ebx
L00401207: 0F 84 03 02 00 00                   jz L00401410
L0040120D: C7 04 24 E8 03 00 00                mov dword [esp],0x03E8
L00401214: FF D7                               call edi
L00401216: 83 EC 04                            sub esp,4
L00401219: C7 44 24 08 00 00 00 00             mov dword [esp+0x8],0x00
L00401221: 89 5C 24 04                         mov [esp+0x4],ebx
L00401225: C7 04 24 D8 53 40 00                mov dword [esp],0x004053D8
L0040122C: FF D6                               call esi
L0040122E: 83 EC 0C                            sub esp,12
L00401231: 85 C0                               test eax,eax
L00401233: 75 D0                               jnz L00401205
L00401235: A1 DC 53 40 00                      mov eax,M004053DC
L0040123A: 31 DB                               xor ebx,ebx
L0040123C: 83 F8 01                            cmp eax,1
L0040123F: 0F 84 DE 01 00 00                   jz L00401423
L00401245: A1 DC 53 40 00                      mov eax,M004053DC
L0040124A: 85 C0                               test eax,eax
L0040124C: 0F 84 3F 02 00 00                   jz L00401491
L00401252: C7 05 00 50 40 00 01 00 00 00       mov M00405000,0x01
L0040125C: A1 DC 53 40 00                      mov eax,M004053DC
L00401261: 83 F8 01                            cmp eax,1
L00401264: 0F 84 D3 01 00 00                   jz L0040143D
L0040126A: 85 DB                               test ebx,ebx
L0040126C: 0F 84 F1 01 00 00                   jz L00401463
L00401272: A1 40 40 40 00                      mov eax,M00404040
L00401277: 85 C0                               test eax,eax
L00401279: 74 1C                               jz L00401297
L0040127B: C7 44 24 08 00 00 00 00             mov dword [esp+0x8],0x00
L00401283: C7 44 24 04 02 00 00 00             mov dword [esp+0x4],0x02
L0040128B: C7 04 24 00 00 00 00                mov dword [esp],0x00
L00401292: FF D0                               call eax
L00401294: 83 EC 0C                            sub esp,12
L00401297: E8 64 0D 00 00                      call L00402000
L0040129C: C7 04 24 20 1B 40 00                mov dword [esp],0x00401B20
L004012A3: FF 15 6C 71 40 00                   call SetUnhandledExceptionFilter
L004012A9: 83 EC 04                            sub esp,4
L004012AC: A3 44 50 40 00                      mov M00405044,eax
L004012B1: C7 04 24 00 10 40 00                mov dword [esp],0x00401000
L004012B8: E8 67 1D 00 00                      call 0x00403024
L004012BD: E8 EE 0F 00 00                      call L004022B0
L004012C2: A1 A4 71 40 00                      mov eax,M004071A4
L004012C7: 31 C9                               xor ecx,ecx
L004012C9: C7 05 CC 53 40 00 00 00 40 00       mov M004053CC,0x00400000
L004012D3: 8B 00                               mov eax,[eax]
L004012D5: 85 C0                               test eax,eax
L004012D7: 75 17                               jnz L004012F0
L004012D9: EB 3E                               jmp L00401319
L004012E0: 84 D2                               test dl,dl
L004012E2: 74 30                               jz L00401314
L004012E4: 85 C9                               test ecx,ecx
L004012E6: 74 21                               jz L00401309
L004012E8: B9 01 00 00 00                      mov ecx,0x01
L004012ED: 83 C0 01                            add eax,1
L004012F0: 0F B6 10                            movzx edx,byte [eax]
L004012F3: 80 FA 20                            cmp dl,0x20
L004012F6: 7E E8                               jng L004012E0
L004012F8: 89 CB                               mov ebx,ecx
L004012FA: 83 F3 01                            xor ebx,1
L004012FD: 80 FA 22                            cmp dl,0x22
L00401300: 0F 44 CB                            cmovz ecx,ebx
L00401303: EB E8                               jmp L004012ED
L00401305: 84 D2                               test dl,dl
L00401307: 74 0B                               jz L00401314
L00401309: 83 C0 01                            add eax,1
L0040130C: 0F B6 10                            movzx edx,byte [eax]
L0040130F: 80 FA 20                            cmp dl,0x20
L00401312: 7E F1                               jng L00401305
L00401314: A3 C8 53 40 00                      mov M004053C8,eax
L00401319: A1 3C 50 40 00                      mov eax,M0040503C
L0040131E: 85 C0                               test eax,eax
L00401320: 74 15                               jz L00401337
L00401322: 0F B7 55 D4                         movzx edx,word [ebp-0x2c]
L00401326: B8 0A 00 00 00                      mov eax,0x0A
L0040132B: F6 45 D0 01                         test byte [ebp-0x30],0x01
L0040132F: 0F 45 C2                            cmovnz eax,edx
L00401332: A3 00 30 40 00                      mov M00403000,eax
L00401337: 8B 15 04 50 40 00                   mov edx,M00405004
L0040133D: 31 DB                               xor ebx,ebx
L0040133F: 8D 04 95 04 00 00 00                lea eax,[edx*4+0x4]
L00401346: 89 55 94                            mov [ebp-0x6c],edx
L00401349: 89 04 24                            mov [esp],eax
L0040134C: E8 0F 17 00 00                      call __impmalloc
L00401351: 8B 3D 08 50 40 00                   mov edi,M00405008
L00401357: 89 45 90                            mov [ebp-0x70],eax
L0040135A: 8B 45 94                            mov eax,[ebp-0x6c]
L0040135D: 85 C0                               test eax,eax
L0040135F: 7E 3A                               jng L0040139B
L00401361: 8B 04 9F                            mov eax,[edi+ebx*4]
L00401364: 89 04 24                            mov [esp],eax
L00401367: E8 FC 16 00 00                      call __impstrlen
L0040136C: 8D 70 01                            lea esi,[eax+0x1]
L0040136F: 89 34 24                            mov [esp],esi
L00401372: E8 E9 16 00 00                      call __impmalloc
L00401377: 8B 55 90                            mov edx,[ebp-0x70]
L0040137A: 89 04 9A                            mov [edx+ebx*4],eax
L0040137D: 8B 14 9F                            mov edx,[edi+ebx*4]
L00401380: 83 C3 01                            add ebx,1
L00401383: 89 74 24 08                         mov [esp+0x8],esi
L00401387: 89 04 24                            mov [esp],eax
L0040138A: 89 54 24 04                         mov [esp+0x4],edx
L0040138E: E8 89 16 00 00                      call __impmemcpy
L00401393: 3B 5D 94                            cmp ebx,[ebp-0x6c]
L00401396: 75 C9                               jnz L00401361
L00401398: C1 E3 02                            shl ebx,0x02
L0040139B: 8B 45 90                            mov eax,[ebp-0x70]
L0040139E: C7 04 18 00 00 00 00                mov dword [eax+ebx],0x00
L004013A5: A3 08 50 40 00                      mov M00405008,eax
L004013AA: E8 91 0F 00 00                      call L00402340
L004013AF: A1 94 71 40 00                      mov eax,M00407194
L004013B4: 8B 15 0C 50 40 00                   mov edx,M0040500C
L004013BA: 89 10                               mov [eax],edx
L004013BC: A1 0C 50 40 00                      mov eax,M0040500C
L004013C1: 89 44 24 08                         mov [esp+0x8],eax
L004013C5: A1 08 50 40 00                      mov eax,M00405008
L004013CA: 89 44 24 04                         mov [esp+0x4],eax
L004013CE: A1 04 50 40 00                      mov eax,M00405004
L004013D3: 89 04 24                            mov [esp],eax
L004013D6: E8 B4 02 00 00                      call main
L004013DB: 8B 35 14 50 40 00                   mov esi,M00405014
L004013E1: 85 F6                               test esi,esi
L004013E3: A3 10 50 40 00                      mov M00405010,eax
L004013E8: 0F 84 C6 00 00 00                   jz L004014B4
L004013EE: 8B 1D 00 50 40 00                   mov ebx,M00405000
L004013F4: 85 DB                               test ebx,ebx
L004013F6: 75 0A                               jnz L00401402
L004013F8: E8 73 16 00 00                      call __imp_cexit
L004013FD: A1 10 50 40 00                      mov eax,M00405010
L00401402: 8D 65 F4                            lea esp,[ebp-0xc]
L00401405: 5B                                  pop ebx
L00401406: 5E                                  pop esi
L00401407: 5F                                  pop edi
L00401408: 5D                                  pop ebp
L00401409: C3                                  ret
L00401410: A1 DC 53 40 00                      mov eax,M004053DC
L00401415: BB 01 00 00 00                      mov ebx,0x01
L0040141A: 83 F8 01                            cmp eax,1
L0040141D: 0F 85 22 FE FF FF                   jnz L00401245
L00401423: C7 04 24 1F 00 00 00                mov dword [esp],0x1F
L0040142A: E8 49 16 00 00                      call __imp_amsg_exit
L0040142F: A1 DC 53 40 00                      mov eax,M004053DC
L00401434: 83 F8 01                            cmp eax,1
L00401437: 0F 85 2D FE FF FF                   jnz L0040126A
L0040143D: C7 44 24 04 08 80 40 00             mov dword [esp+0x4],0x00408008
L00401445: C7 04 24 00 80 40 00                mov dword [esp],0x00408000
L0040144C: E8 2F 16 00 00                      call __imp_initterm
L00401451: 85 DB                               test ebx,ebx
L00401453: C7 05 DC 53 40 00 02 00 00 00       mov M004053DC,0x02
L0040145D: 0F 85 0F FE FF FF                   jnz L00401272
L00401463: C7 44 24 04 00 00 00 00             mov dword [esp+0x4],0x00
L0040146B: C7 04 24 D8 53 40 00                mov dword [esp],0x004053D8
L00401472: FF 15 60 71 40 00                   call InterlockedExchange
L00401478: 83 EC 08                            sub esp,8
L0040147B: E9 F2 FD FF FF                      jmp L00401272
L00401480: 89 14 24                            mov [esp],edx
L00401483: FF 15 4C 71 40 00                   call GetStartupInfoA
L00401489: 83 EC 04                            sub esp,4
L0040148C: E9 5D FD FF FF                      jmp L004011EE
L00401491: C7 05 DC 53 40 00 01 00 00 00       mov M004053DC,0x01
L0040149B: C7 44 24 04 18 80 40 00             mov dword [esp+0x4],0x00408018
L004014A3: C7 04 24 0C 80 40 00                mov dword [esp],0x0040800C
L004014AA: E8 D1 15 00 00                      call __imp_initterm
L004014AF: E9 A8 FD FF FF                      jmp L0040125C
L004014B4: 89 04 24                            mov [esp],eax
L004014B7: E8 CC 15 00 00                      call __impexit
L004014BC: 8D 74 26 00                         lea esi,[esi+0x0]
L004014C0: 83 EC 0C                            sub esp,12
L004014C3: C7 05 3C 50 40 00 01 00 00 00       mov M0040503C,0x01
L004014CD: E8 8E 0E 00 00                      call L00402360
L004014D2: 83 C4 0C                            add esp,12
L004014D5: E9 A6 FC FF FF                      jmp L00401180
L004014E0: 83 EC 0C                            sub esp,12
L004014E3: C7 05 3C 50 40 00 00 00 00 00       mov M0040503C,0x00
L004014ED: E8 6E 0E 00 00                      call L00402360
L004014F2: 83 C4 0C                            add esp,12
L004014F5: E9 86 FC FF FF                      jmp L00401180
;; End of Function EntryPoint @ L004014E0

;; Function my_abs @ L00401560
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401560: 8B 44 24 04                         mov eax,[esp+0x4]
L00401564: 99                                  cdq
L00401565: 31 D0                               xor eax,edx
L00401567: 29 D0                               sub eax,edx
L00401569: C3                                  ret
;; End of Function my_abs @ L00401560

;; Function my_labs @ L0040156A
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L0040156A: 8B 44 24 04                         mov eax,[esp+0x4]
L0040156E: 99                                  cdq
L0040156F: 31 D0                               xor eax,edx
L00401571: 29 D0                               sub eax,edx
L00401573: C3                                  ret
;; End of Function my_labs @ L0040156A

;; Function my__strset @ L00401574
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401574: 83 EC 1C                            sub esp,28
L00401577: 8B 44 24 24                         mov eax,[esp+0x24]
L0040157B: 89 44 24 04                         mov [esp+0x4],eax
L0040157F: 8B 44 24 20                         mov eax,[esp+0x20]
L00401583: 89 04 24                            mov [esp],eax
L00401586: E8 05 15 00 00                      call __imp_strset
L0040158B: 83 C4 1C                            add esp,28
L0040158E: C3                                  ret
;; End of Function my__strset @ L00401574

;; Function my_memcmp @ L0040158F
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L0040158F: 83 EC 1C                            sub esp,28
L00401592: 8B 44 24 28                         mov eax,[esp+0x28]
L00401596: 89 44 24 08                         mov [esp+0x8],eax
L0040159A: 8B 44 24 24                         mov eax,[esp+0x24]
L0040159E: 89 44 24 04                         mov [esp+0x4],eax
L004015A2: 8B 44 24 20                         mov eax,[esp+0x20]
L004015A6: 89 04 24                            mov [esp],eax
L004015A9: E8 EA 14 00 00                      call __impmemcmp
L004015AE: 83 C4 1C                            add esp,28
L004015B1: C3                                  ret
;; End of Function my_memcmp @ L0040158F

;; Function my_memcpy @ L004015B2
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L004015B2: 83 EC 1C                            sub esp,28
L004015B5: 8B 44 24 28                         mov eax,[esp+0x28]
L004015B9: 89 44 24 08                         mov [esp+0x8],eax
L004015BD: 8B 44 24 24                         mov eax,[esp+0x24]
L004015C1: 89 44 24 04                         mov [esp+0x4],eax
L004015C5: 8B 44 24 20                         mov eax,[esp+0x20]
L004015C9: 89 04 24                            mov [esp],eax
L004015CC: E8 4B 14 00 00                      call __impmemcpy
L004015D1: 83 C4 1C                            add esp,28
L004015D4: C3                                  ret
;; End of Function my_memcpy @ L004015B2

;; Function my_memset @ L004015D5
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L004015D5: 83 EC 1C                            sub esp,28
L004015D8: 8B 44 24 28                         mov eax,[esp+0x28]
L004015DC: 89 44 24 08                         mov [esp+0x8],eax
L004015E0: 8B 44 24 24                         mov eax,[esp+0x24]
L004015E4: 89 44 24 04                         mov [esp+0x4],eax
L004015E8: 8B 44 24 20                         mov eax,[esp+0x20]
L004015EC: 89 04 24                            mov [esp],eax
L004015EF: E8 AC 14 00 00                      call __impmemset
L004015F4: 83 C4 1C                            add esp,28
L004015F7: C3                                  ret
;; End of Function my_memset @ L004015D5

;; Function my_strcat @ L004015F8
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L004015F8: 83 EC 1C                            sub esp,28
L004015FB: 8B 44 24 24                         mov eax,[esp+0x24]
L004015FF: 89 44 24 04                         mov [esp+0x4],eax
L00401603: 8B 44 24 20                         mov eax,[esp+0x20]
L00401607: 89 04 24                            mov [esp],eax
L0040160A: E8 99 14 00 00                      call __impstrcat
L0040160F: 83 C4 1C                            add esp,28
L00401612: C3                                  ret
;; End of Function my_strcat @ L004015F8

;; Function my_strcmp @ L00401613
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401613: 83 EC 1C                            sub esp,28
L00401616: 8B 44 24 24                         mov eax,[esp+0x24]
L0040161A: 89 44 24 04                         mov [esp+0x4],eax
L0040161E: 8B 44 24 20                         mov eax,[esp+0x20]
L00401622: 89 04 24                            mov [esp],eax
L00401625: E8 86 14 00 00                      call __impstrcmp
L0040162A: 83 C4 1C                            add esp,28
L0040162D: C3                                  ret
;; End of Function my_strcmp @ L00401613

;; Function my_strlen @ L0040162E
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L0040162E: 57                                  push edi
L0040162F: 8B 7C 24 08                         mov edi,[esp+0x8]
L00401633: B8 00 00 00 00                      mov eax,0x00
L00401638: B9 FF FF FF FF                      mov ecx,0xFFFFFFFF
L0040163D: F2 AE                               repne scasb 
L0040163F: F7 D1                               not ecx
L00401641: 8D 41 FF                            lea eax,[ecx-0x1]
L00401644: 5F                                  pop edi
L00401645: C3                                  ret
;; End of Function my_strlen @ L0040162E

;; Function my_strncmp @ L00401646
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401646: 83 EC 1C                            sub esp,28
L00401649: 8B 44 24 28                         mov eax,[esp+0x28]
L0040164D: 89 44 24 08                         mov [esp+0x8],eax
L00401651: 8B 44 24 24                         mov eax,[esp+0x24]
L00401655: 89 44 24 04                         mov [esp+0x4],eax
L00401659: 8B 44 24 20                         mov eax,[esp+0x20]
L0040165D: 89 04 24                            mov [esp],eax
L00401660: E8 E1 FF FF FF                      call my_strncmp
L00401665: 83 C4 1C                            add esp,28
L00401668: C3                                  ret
;; End of Function my_strncmp @ L00401646

;; Function my_strncpy @ L00401669
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401669: 83 EC 1C                            sub esp,28
L0040166C: 8B 44 24 28                         mov eax,[esp+0x28]
L00401670: 83 C0 01                            add eax,1
L00401673: 89 44 24 08                         mov [esp+0x8],eax
L00401677: 8B 44 24 24                         mov eax,[esp+0x24]
L0040167B: 89 44 24 04                         mov [esp+0x4],eax
L0040167F: 8B 44 24 20                         mov eax,[esp+0x20]
L00401683: 89 04 24                            mov [esp],eax
L00401686: E8 2D 14 00 00                      call __impstrncpy
L0040168B: 83 C4 1C                            add esp,28
L0040168E: C3                                  ret
;; End of Function my_strncpy @ L00401669

;; Function main @ L0040168F
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L0040168F: 55                                  push ebp
L00401690: 89 E5                               mov ebp,esp
L00401692: 57                                  push edi
L00401693: 83 E4 F0                            and esp,-16
L00401696: 81 EC 10 01 00 00                   sub esp,0x0110
L0040169C: E8 9F 0C 00 00                      call L00402340
L004016A1: C7 04 24 02 00 00 00                mov dword [esp],0x02
L004016A8: E8 B3 FE FF FF                      call my_abs
L004016AD: 89 44 24 04                         mov [esp+0x4],eax
L004016B1: C7 04 24 24 40 40 00                mov dword [esp],0x00404024
L004016B8: E8 03 14 00 00                      call __impprintf
L004016BD: C7 04 24 03 00 00 00                mov dword [esp],0x03
L004016C4: E8 A1 FE FF FF                      call my_labs
L004016C9: 89 44 24 04                         mov [esp+0x4],eax
L004016CD: C7 04 24 28 40 40 00                mov dword [esp],0x00404028
L004016D4: E8 E7 13 00 00                      call __impprintf
L004016D9: C7 44 24 04 7B 00 00 00             mov dword [esp+0x4],0x7B
L004016E1: 8D BC 24 95 00 00 00                lea edi,[esp+0x95]
L004016E8: 89 3C 24                            mov [esp],edi
L004016EB: E8 84 FE FF FF                      call my__strset
L004016F0: 89 3C 24                            mov [esp],edi
L004016F3: E8 D0 13 00 00                      call __impputs
L004016F8: C7 44 24 08 05 00 00 00             mov dword [esp+0x8],0x05
L00401700: C7 44 24 04 2D 40 40 00             mov dword [esp+0x4],0x0040402D
L00401708: C7 04 24 33 40 40 00                mov dword [esp],0x00404033
L0040170F: E8 7B FE FF FF                      call my_memcmp
L00401714: 85 C0                               test eax,eax
L00401716: 75 0C                               jnz L00401724
L00401718: C7 04 24 38 40 40 00                mov dword [esp],0x00404038
L0040171F: E8 A4 13 00 00                      call __impputs
L00401724: C7 84 24 95 00 00 00 6B 6C 6B 3B    mov dword [esp+0x95],0x3B6B6C6B
L0040172F: C7 84 24 99 00 00 00 6A 6B 6A 3B    mov dword [esp+0x99],0x3B6A6B6A
L0040173A: C7 84 24 9D 00 00 00 00 00 00 00    mov dword [esp+0x9d],0x00
L00401745: C6 84 24 A1 00 00 00 00             mov byte [esp+0xa1],0x00
L0040174D: 8D BC 24 A2 00 00 00                lea edi,[esp+0xa2]
L00401754: BA 6E 00 00 00                      mov edx,0x6E
L00401759: F7 C7 02 00 00 00                   test edi,0x02
L0040175F: 74 0B                               jz L0040176C
L00401761: 66 C7 07 00 00                      mov word [edi],0x00
L00401766: 83 C7 02                            add edi,2
L00401769: 83 EA 02                            sub edx,2
L0040176C: 89 D1                               mov ecx,edx
L0040176E: C1 E9 02                            shr ecx,0x02
L00401771: B8 00 00 00 00                      mov eax,0x00
L00401776: F3 AB                               rep stosd 
L00401778: F6 C2 02                            test dl,0x02
L0040177B: 74 08                               jz L00401785
L0040177D: 66 C7 07 00 00                      mov word [edi],0x00
L00401782: 83 C7 02                            add edi,2
L00401785: F6 C2 01                            test dl,0x01
L00401788: 74 03                               jz L0040178D
L0040178A: C6 07 00                            mov byte [edi],0x00
L0040178D: C7 44 24 08 03 00 00 00             mov dword [esp+0x8],0x03
L00401795: 8D BC 24 95 00 00 00                lea edi,[esp+0x95]
L0040179C: 89 7C 24 04                         mov [esp+0x4],edi
L004017A0: 89 3C 24                            mov [esp],edi
L004017A3: E8 0A FE FF FF                      call my_memcpy
L004017A8: 89 3C 24                            mov [esp],edi
L004017AB: E8 18 13 00 00                      call __impputs
L004017B0: C7 44 24 08 7B 00 00 00             mov dword [esp+0x8],0x7B
L004017B8: C7 44 24 04 0B 00 00 00             mov dword [esp+0x4],0x0B
L004017C0: 89 3C 24                            mov [esp],edi
L004017C3: E8 0D FE FF FF                      call my_memset
L004017C8: 89 3C 24                            mov [esp],edi
L004017CB: E8 F8 12 00 00                      call __impputs
L004017D0: C7 44 24 1A 54 45 57 54             mov dword [esp+0x1a],0x54574554
L004017D8: C7 44 24 1E 00 00 00 00             mov dword [esp+0x1e],0x00
L004017E0: 66 C7 44 24 22 00 00                mov word [esp+0x22],0x00
L004017E7: 8D 7C 24 24                         lea edi,[esp+0x24]
L004017EB: BA 71 00 00 00                      mov edx,0x71
L004017F0: 89 D1                               mov ecx,edx
L004017F2: C1 E9 02                            shr ecx,0x02
L004017F5: B8 00 00 00 00                      mov eax,0x00
L004017FA: F3 AB                               rep stosd 
L004017FC: F6 C2 02                            test dl,0x02
L004017FF: 74 08                               jz L00401809
L00401801: 66 C7 07 00 00                      mov word [edi],0x00
L00401806: 83 C7 02                            add edi,2
L00401809: F6 C2 01                            test dl,0x01
L0040180C: 74 03                               jz L00401811
L0040180E: C6 07 00                            mov byte [edi],0x00
L00401811: C7 84 24 95 00 00 00 54 45 57 54    mov dword [esp+0x95],0x54574554
L0040181C: C7 84 24 99 00 00 00 00 00 00 00    mov dword [esp+0x99],0x00
L00401827: C6 84 24 9D 00 00 00 00             mov byte [esp+0x9d],0x00
L0040182F: 8D BC 24 9E 00 00 00                lea edi,[esp+0x9e]
L00401836: BA 72 00 00 00                      mov edx,0x72
L0040183B: F7 C7 02 00 00 00                   test edi,0x02
L00401841: 74 0B                               jz L0040184E
L00401843: 66 C7 07 00 00                      mov word [edi],0x00
L00401848: 83 C7 02                            add edi,2
L0040184B: 83 EA 02                            sub edx,2
L0040184E: 89 D1                               mov ecx,edx
L00401850: C1 E9 02                            shr ecx,0x02
L00401853: B8 00 00 00 00                      mov eax,0x00
L00401858: F3 AB                               rep stosd 
L0040185A: F6 C2 02                            test dl,0x02
L0040185D: 74 08                               jz L00401867
L0040185F: 66 C7 07 00 00                      mov word [edi],0x00
L00401864: 83 C7 02                            add edi,2
L00401867: F6 C2 01                            test dl,0x01
L0040186A: 74 03                               jz L0040186F
L0040186C: C6 07 00                            mov byte [edi],0x00
L0040186F: 8D 84 24 95 00 00 00                lea eax,[esp+0x95]
L00401876: 89 44 24 04                         mov [esp+0x4],eax
L0040187A: 8D 7C 24 1A                         lea edi,[esp+0x1a]
L0040187E: 89 3C 24                            mov [esp],edi
L00401881: E8 72 FD FF FF                      call my_strcat
L00401886: 89 3C 24                            mov [esp],edi
L00401889: E8 3A 12 00 00                      call __impputs
L0040188E: C7 44 24 04 2D 40 40 00             mov dword [esp+0x4],0x0040402D
L00401896: C7 04 24 33 40 40 00                mov dword [esp],0x00404033
L0040189D: E8 71 FD FF FF                      call my_strcmp
L004018A2: 85 C0                               test eax,eax
L004018A4: 74 0C                               jz L004018B2
L004018A6: C7 04 24 38 40 40 00                mov dword [esp],0x00404038
L004018AD: E8 16 12 00 00                      call __impputs
L004018B2: C7 04 24 3B 40 40 00                mov dword [esp],0x0040403B
L004018B9: E8 70 FD FF FF                      call my_strlen
L004018BE: 89 44 24 04                         mov [esp+0x4],eax
L004018C2: C7 04 24 24 40 40 00                mov dword [esp],0x00404024
L004018C9: E8 F2 11 00 00                      call __impprintf
L004018CE: C7 44 24 08 04 00 00 00             mov dword [esp+0x8],0x04
L004018D6: C7 44 24 04 2D 40 40 00             mov dword [esp+0x4],0x0040402D
L004018DE: C7 04 24 33 40 40 00                mov dword [esp],0x00404033
L004018E5: E8 5C FD FF FF                      call my_strncmp
L004018EA: 85 C0                               test eax,eax
L004018EC: 75 0C                               jnz L004018FA
L004018EE: C7 04 24 38 40 40 00                mov dword [esp],0x00404038
L004018F5: E8 CE 11 00 00                      call __impputs
L004018FA: C7 44 24 08 04 00 00 00             mov dword [esp+0x8],0x04
L00401902: C7 44 24 04 2D 40 40 00             mov dword [esp+0x4],0x0040402D
L0040190A: 8D BC 24 95 00 00 00                lea edi,[esp+0x95]
L00401911: 89 3C 24                            mov [esp],edi
L00401914: E8 50 FD FF FF                      call my_strncpy
L00401919: 89 3C 24                            mov [esp],edi
L0040191C: E8 A7 11 00 00                      call __impputs
L00401921: B8 00 00 00 00                      mov eax,0x00
L00401926: 8B 7D FC                            mov edi,[ebp-0x4]
L00401929: C9                                  leave
L0040192A: C3                                  ret
;; End of Function main @ L0040168F

;; Function L00401A20
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401A20: 8B 44 24 04                         mov eax,[esp+0x4]
L00401A24: C3                                  ret
;; End of Function L00401A20

;; Function L00401A30
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401A30: 8B 44 24 04                         mov eax,[esp+0x4]
L00401A34: C3                                  ret
;; End of Function L00401A30

;; Function L00401A40
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401A40: 53                                  push ebx
L00401A41: 83 EC 28                            sub esp,40
L00401A44: A1 D4 53 40 00                      mov eax,M004053D4
L00401A49: 89 04 24                            mov [esp],eax
L00401A4C: E8 CF FF FF FF                      call L00401A20
L00401A51: 83 F8 FF                            cmp eax,-1
L00401A54: 89 44 24 18                         mov [esp+0x18],eax
L00401A58: 0F 84 82 00 00 00                   jz L00401AE0
L00401A5E: C7 04 24 08 00 00 00                mov dword [esp],0x08
L00401A65: E8 66 10 00 00                      call __imp_lock
L00401A6A: A1 D4 53 40 00                      mov eax,M004053D4
L00401A6F: 89 04 24                            mov [esp],eax
L00401A72: E8 A9 FF FF FF                      call L00401A20
L00401A77: 89 44 24 18                         mov [esp+0x18],eax
L00401A7B: A1 D0 53 40 00                      mov eax,M004053D0
L00401A80: 89 04 24                            mov [esp],eax
L00401A83: E8 98 FF FF FF                      call L00401A20
L00401A88: 89 44 24 1C                         mov [esp+0x1c],eax
L00401A8C: 8D 44 24 1C                         lea eax,[esp+0x1c]
L00401A90: 89 44 24 08                         mov [esp+0x8],eax
L00401A94: 8D 44 24 18                         lea eax,[esp+0x18]
L00401A98: 89 44 24 04                         mov [esp+0x4],eax
L00401A9C: 8B 44 24 30                         mov eax,[esp+0x30]
L00401AA0: 89 04 24                            mov [esp],eax
L00401AA3: E8 30 10 00 00                      call __imp__dllonexit
L00401AA8: 89 C3                               mov ebx,eax
L00401AAA: 8B 44 24 18                         mov eax,[esp+0x18]
L00401AAE: 89 04 24                            mov [esp],eax
L00401AB1: E8 7A FF FF FF                      call L00401A30
L00401AB6: A3 D4 53 40 00                      mov M004053D4,eax
L00401ABB: 8B 44 24 1C                         mov eax,[esp+0x1c]
L00401ABF: 89 04 24                            mov [esp],eax
L00401AC2: E8 69 FF FF FF                      call L00401A30
L00401AC7: C7 04 24 08 00 00 00                mov dword [esp],0x08
L00401ACE: A3 D0 53 40 00                      mov M004053D0,eax
L00401AD3: E8 08 10 00 00                      call __imp_unlock
L00401AD8: 83 C4 28                            add esp,40
L00401ADB: 89 D8                               mov eax,ebx
L00401ADD: 5B                                  pop ebx
L00401ADE: C3                                  ret
L00401AE0: 8B 44 24 30                         mov eax,[esp+0x30]
L00401AE4: 89 04 24                            mov [esp],eax
L00401AE7: FF 15 C0 71 40 00                   call _onexit
L00401AED: 83 C4 28                            add esp,40
L00401AF0: 89 C3                               mov ebx,eax
L00401AF2: 89 D8                               mov eax,ebx
L00401AF4: 5B                                  pop ebx
L00401AF5: C3                                  ret
;; End of Function L00401A40

;; Function L00401B00
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401B00: 83 EC 1C                            sub esp,28
L00401B03: 8B 44 24 20                         mov eax,[esp+0x20]
L00401B07: 89 04 24                            mov [esp],eax
L00401B0A: E8 31 FF FF FF                      call L00401A40
L00401B0F: 83 F8 01                            cmp eax,1
L00401B12: 19 C0                               sbb eax,eax
L00401B14: 83 C4 1C                            add esp,28
L00401B17: C3                                  ret
;; End of Function L00401B00

;; Function L00401D50
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401D50: 53                                  push ebx
L00401D51: 83 EC 18                            sub esp,24
L00401D54: A1 B8 71 40 00                      mov eax,M004071B8
L00401D59: C7 44 24 08 1B 00 00 00             mov dword [esp+0x8],0x1B
L00401D61: 8D 5C 24 24                         lea ebx,[esp+0x24]
L00401D65: C7 44 24 04 01 00 00 00             mov dword [esp+0x4],0x01
L00401D6D: C7 04 24 78 41 40 00                mov dword [esp],0x00404178
L00401D74: 83 C0 40                            add eax,64
L00401D77: 89 44 24 0C                         mov [esp+0xc],eax
L00401D7B: E8 80 0D 00 00                      call __impfwrite
L00401D80: 8B 44 24 20                         mov eax,[esp+0x20]
L00401D84: 89 5C 24 08                         mov [esp+0x8],ebx
L00401D88: 89 44 24 04                         mov [esp+0x4],eax
L00401D8C: A1 B8 71 40 00                      mov eax,M004071B8
L00401D91: 83 C0 40                            add eax,64
L00401D94: 89 04 24                            mov [esp],eax
L00401D97: E8 6C 0D 00 00                      call __impvfprintf
L00401D9C: E8 6F 0D 00 00                      call __impabort
L00401DA1: EB 0D                               jmp L00401DB0
L00401DB0: 55                                  push ebp
L00401DB1: 57                                  push edi
L00401DB2: 56                                  push esi
L00401DB3: 89 C6                               mov esi,eax
L00401DB5: 53                                  push ebx
L00401DB6: 83 EC 4C                            sub esp,76
L00401DB9: 89 4C 24 1C                         mov [esp+0x1c],ecx
L00401DBD: 8B 0D 54 50 40 00                   mov ecx,M00405054
L00401DC3: 89 54 24 18                         mov [esp+0x18],edx
L00401DC7: 85 C9                               test ecx,ecx
L00401DC9: 0F 8E E1 01 00 00                   jng L00401FB0
L00401DCF: 8B 15 50 50 40 00                   mov edx,M00405050
L00401DD5: 31 DB                               xor ebx,ebx
L00401DD7: 8B 42 04                            mov eax,[edx+0x4]
L00401DDA: 39 C6                               cmp esi,eax
L00401DDC: 72 0E                               jc L00401DEC
L00401DDE: 8B 7A 08                            mov edi,[edx+0x8]
L00401DE1: 03 47 08                            add eax,[edi+0x8]
L00401DE4: 39 C6                               cmp esi,eax
L00401DE6: 0F 82 D4 00 00 00                   jc L00401EC0
L00401DEC: 83 C3 01                            add ebx,1
L00401DEF: 83 C2 0C                            add edx,12
L00401DF2: 39 CB                               cmp ebx,ecx
L00401DF4: 75 E1                               jnz L00401DD7
L00401DF6: 89 34 24                            mov [esp],esi
L00401DF9: E8 02 0A 00 00                      call L00402800
L00401DFE: 85 C0                               test eax,eax
L00401E00: 89 C5                               mov ebp,eax
L00401E02: 0F 84 CF 01 00 00                   jz L00401FD7
L00401E08: 8D 0C 5B                            lea ecx,[ebx+ebx*2]
L00401E0B: 8B 1D 50 50 40 00                   mov ebx,M00405050
L00401E11: 8D 3C 8D 00 00 00 00                lea edi,[ecx*4+0x0]
L00401E18: 01 FB                               add ebx,edi
L00401E1A: 89 43 08                            mov [ebx+0x8],eax
L00401E1D: C7 03 00 00 00 00                   mov dword [ebx],0x00
L00401E23: E8 A8 0A 00 00                      call L004028D0
L00401E28: 8D 54 24 24                         lea edx,[esp+0x24]
L00401E2C: 03 45 0C                            add eax,[ebp+0xc]
L00401E2F: 89 43 04                            mov [ebx+0x4],eax
L00401E32: A1 50 50 40 00                      mov eax,M00405050
L00401E37: 89 54 24 04                         mov [esp+0x4],edx
L00401E3B: 8B 1D 84 71 40 00                   mov ebx,M00407184
L00401E41: C7 44 24 08 1C 00 00 00             mov dword [esp+0x8],0x1C
L00401E49: 8B 44 38 04                         mov eax,[eax+edi+0x4]
L00401E4D: 89 54 24 14                         mov [esp+0x14],edx
L00401E51: 89 04 24                            mov [esp],eax
L00401E54: FF D3                               call ebx
L00401E56: 83 EC 0C                            sub esp,12
L00401E59: 85 C0                               test eax,eax
L00401E5B: 8B 54 24 14                         mov edx,[esp+0x14]
L00401E5F: 0F 84 52 01 00 00                   jz L00401FB7
L00401E65: 8B 44 24 38                         mov eax,[esp+0x38]
L00401E69: 83 F8 04                            cmp eax,4
L00401E6C: 0F 85 DE 00 00 00                   jnz L00401F50
L00401E72: 83 05 54 50 40 00 01                add M00405054,1
L00401E79: C7 44 24 08 1C 00 00 00             mov dword [esp+0x8],0x1C
L00401E81: 89 54 24 04                         mov [esp+0x4],edx
L00401E85: 89 34 24                            mov [esp],esi
L00401E88: FF D3                               call ebx
L00401E8A: 83 EC 0C                            sub esp,12
L00401E8D: 85 C0                               test eax,eax
L00401E8F: 0F 84 52 01 00 00                   jz L00401FE7
L00401E95: 8B 44 24 38                         mov eax,[esp+0x38]
L00401E99: 83 F8 04                            cmp eax,4
L00401E9C: 75 32                               jnz L00401ED0
L00401E9E: 8B 44 24 1C                         mov eax,[esp+0x1c]
L00401EA2: 89 34 24                            mov [esp],esi
L00401EA5: 89 44 24 08                         mov [esp+0x8],eax
L00401EA9: 8B 44 24 18                         mov eax,[esp+0x18]
L00401EAD: 89 44 24 04                         mov [esp+0x4],eax
L00401EB1: E8 66 0B 00 00                      call __impmemcpy
L00401EB6: 83 C4 4C                            add esp,76
L00401EB9: 5B                                  pop ebx
L00401EBA: 5E                                  pop esi
L00401EBB: 5F                                  pop edi
L00401EBC: 5D                                  pop ebp
L00401EBD: C3                                  ret
L00401EC0: 8D 54 24 24                         lea edx,[esp+0x24]
L00401EC4: 8B 1D 84 71 40 00                   mov ebx,M00407184
L00401ECA: EB AD                               jmp L00401E79
L00401ED0: 83 F8 40                            cmp eax,64
L00401ED3: 74 C9                               jz L00401E9E
L00401ED5: 8B 44 24 30                         mov eax,[esp+0x30]
L00401ED9: 8D 6C 24 20                         lea ebp,[esp+0x20]
L00401EDD: 8B 1D 80 71 40 00                   mov ebx,M00407180
L00401EE3: 89 6C 24 0C                         mov [esp+0xc],ebp
L00401EE7: C7 44 24 08 40 00 00 00             mov dword [esp+0x8],0x40
L00401EEF: 89 44 24 04                         mov [esp+0x4],eax
L00401EF3: 8B 44 24 24                         mov eax,[esp+0x24]
L00401EF7: 89 04 24                            mov [esp],eax
L00401EFA: FF D3                               call ebx
L00401EFC: 83 EC 10                            sub esp,16
L00401EFF: 8B 44 24 1C                         mov eax,[esp+0x1c]
L00401F03: 89 34 24                            mov [esp],esi
L00401F06: 89 44 24 08                         mov [esp+0x8],eax
L00401F0A: 8B 44 24 18                         mov eax,[esp+0x18]
L00401F0E: 89 44 24 04                         mov [esp+0x4],eax
L00401F12: E8 05 0B 00 00                      call __impmemcpy
L00401F17: 8B 44 24 38                         mov eax,[esp+0x38]
L00401F1B: 83 F8 40                            cmp eax,64
L00401F1E: 74 96                               jz L00401EB6
L00401F20: 83 F8 04                            cmp eax,4
L00401F23: 74 91                               jz L00401EB6
L00401F25: 8B 44 24 20                         mov eax,[esp+0x20]
L00401F29: 89 6C 24 0C                         mov [esp+0xc],ebp
L00401F2D: 89 44 24 08                         mov [esp+0x8],eax
L00401F31: 8B 44 24 30                         mov eax,[esp+0x30]
L00401F35: 89 44 24 04                         mov [esp+0x4],eax
L00401F39: 8B 44 24 24                         mov eax,[esp+0x24]
L00401F3D: 89 04 24                            mov [esp],eax
L00401F40: FF D3                               call ebx
L00401F42: 83 EC 10                            sub esp,16
L00401F45: 83 C4 4C                            add esp,76
L00401F48: 5B                                  pop ebx
L00401F49: 5E                                  pop esi
L00401F4A: 5F                                  pop edi
L00401F4B: 5D                                  pop ebp
L00401F4C: C3                                  ret
L00401F50: 83 F8 40                            cmp eax,64
L00401F53: 0F 84 19 FF FF FF                   jz L00401E72
L00401F59: 8B 44 24 30                         mov eax,[esp+0x30]
L00401F5D: 8B 0D 50 50 40 00                   mov ecx,M00405050
L00401F63: 89 54 24 14                         mov [esp+0x14],edx
L00401F67: C7 44 24 08 40 00 00 00             mov dword [esp+0x8],0x40
L00401F6F: 89 44 24 04                         mov [esp+0x4],eax
L00401F73: 8B 44 24 24                         mov eax,[esp+0x24]
L00401F77: 01 F9                               add ecx,edi
L00401F79: 89 4C 24 0C                         mov [esp+0xc],ecx
L00401F7D: 89 04 24                            mov [esp],eax
L00401F80: FF 15 80 71 40 00                   call VirtualProtect
L00401F86: 83 EC 10                            sub esp,16
L00401F89: 85 C0                               test eax,eax
L00401F8B: 8B 54 24 14                         mov edx,[esp+0x14]
L00401F8F: 0F 85 DD FE FF FF                   jnz L00401E72
L00401F95: FF 15 40 71 40 00                   call GetLastError
L00401F9B: C7 04 24 E8 41 40 00                mov dword [esp],0x004041E8
L00401FA2: 89 44 24 04                         mov [esp+0x4],eax
L00401FA6: E8 A5 FD FF FF                      call L00401D50
L00401FAB: 90                                  nop
L00401FAC: 8D 74 26 00                         lea esi,[esi+0x0]
L00401FB0: 31 DB                               xor ebx,ebx
L00401FB2: E9 3F FE FF FF                      jmp L00401DF6
L00401FB7: A1 50 50 40 00                      mov eax,M00405050
L00401FBC: 8B 44 38 04                         mov eax,[eax+edi+0x4]
L00401FC0: 89 44 24 08                         mov [esp+0x8],eax
L00401FC4: 8B 45 08                            mov eax,[ebp+0x8]
L00401FC7: C7 04 24 B4 41 40 00                mov dword [esp],0x004041B4
L00401FCE: 89 44 24 04                         mov [esp+0x4],eax
L00401FD2: E8 79 FD FF FF                      call L00401D50
L00401FD7: 89 74 24 04                         mov [esp+0x4],esi
L00401FDB: C7 04 24 94 41 40 00                mov dword [esp],0x00404194
L00401FE2: E8 69 FD FF FF                      call L00401D50
L00401FE7: 89 74 24 08                         mov [esp+0x8],esi
L00401FEB: C7 44 24 04 1C 00 00 00             mov dword [esp+0x4],0x1C
L00401FF3: C7 04 24 B4 41 40 00                mov dword [esp],0x004041B4
L00401FFA: E8 51 FD FF FF                      call L00401D50
L00401FFF: 90                                  nop
L00402000: A1 4C 50 40 00                      mov eax,M0040504C
L00402005: 85 C0                               test eax,eax
L00402007: 74 07                               jz L00402010
L00402009: C3                                  ret
L00402010: 55                                  push ebp
L00402011: 89 E5                               mov ebp,esp
L00402013: 57                                  push edi
L00402014: 56                                  push esi
L00402015: 53                                  push ebx
L00402016: 83 EC 5C                            sub esp,92
L00402019: C7 05 4C 50 40 00 01 00 00 00       mov M0040504C,0x01
L00402023: E8 18 08 00 00                      call L00402840
L00402028: 8D 04 40                            lea eax,[eax+eax*2]
L0040202B: 8D 04 85 1E 00 00 00                lea eax,[eax*4+0x1e]
L00402032: 83 E0 F0                            and eax,-16
L00402035: E8 A6 09 00 00                      call L004029E0
L0040203A: C7 05 54 50 40 00 00 00 00 00       mov M00405054,0x00
L00402044: 29 C4                               sub esp,eax
L00402046: 8D 44 24 1F                         lea eax,[esp+0x1f]
L0040204A: 83 E0 F0                            and eax,-16
L0040204D: A3 50 50 40 00                      mov M00405050,eax
L00402052: B8 54 43 40 00                      mov eax,0x00404354
L00402057: 2D 3C 43 40 00                      sub eax,0x0040433C
L0040205C: 83 F8 07                            cmp eax,7
L0040205F: 0F 8E 9C 00 00 00                   jng L00402101
L00402065: 83 F8 0B                            cmp eax,11
L00402068: 0F 8E 52 01 00 00                   jng L004021C0
L0040206E: A1 3C 43 40 00                      mov eax,M0040433C
L00402073: 85 C0                               test eax,eax
L00402075: 0F 85 8E 00 00 00                   jnz L00402109
L0040207B: A1 40 43 40 00                      mov eax,M00404340
L00402080: 85 C0                               test eax,eax
L00402082: 0F 85 81 00 00 00                   jnz L00402109
L00402088: 8B 3D 44 43 40 00                   mov edi,M00404344
L0040208E: BB 48 43 40 00                      mov ebx,0x00404348
L00402093: 85 FF                               test edi,edi
L00402095: 0F 84 2A 01 00 00                   jz L004021C5
L0040209B: BB 3C 43 40 00                      mov ebx,0x0040433C
L004020A0: 8B 43 08                            mov eax,[ebx+0x8]
L004020A3: 83 F8 01                            cmp eax,1
L004020A6: 0F 85 EB 01 00 00                   jnz L00402297
L004020AC: 83 C3 0C                            add ebx,12
L004020AF: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L004020B5: 73 4A                               jnc L00402101
L004020B7: 8B 13                               mov edx,[ebx]
L004020B9: 0F B6 73 08                         movzx esi,byte [ebx+0x8]
L004020BD: 8B 7B 04                            mov edi,[ebx+0x4]
L004020C0: 8B 8A 00 00 40 00                   mov ecx,[edx+0x400000]
L004020C6: 83 FE 10                            cmp esi,16
L004020C9: 8D 87 00 00 40 00                   lea eax,[edi+0x400000]
L004020CF: 89 4D B0                            mov [ebp-0x50],ecx
L004020D2: 0F 84 07 01 00 00                   jz L004021DF
L004020D8: 83 FE 20                            cmp esi,32
L004020DB: 0F 84 74 01 00 00                   jz L00402255
L004020E1: 83 FE 08                            cmp esi,8
L004020E4: 0F 84 3E 01 00 00                   jz L00402228
L004020EA: 89 74 24 04                         mov [esp+0x4],esi
L004020EE: C7 04 24 44 42 40 00                mov dword [esp],0x00404244
L004020F5: C7 45 C4 00 00 00 00                mov dword [ebp-0x3c],0x00
L004020FC: E8 4F FC FF FF                      call L00401D50
L00402101: 8D 65 F4                            lea esp,[ebp-0xc]
L00402104: 5B                                  pop ebx
L00402105: 5E                                  pop esi
L00402106: 5F                                  pop edi
L00402107: 5D                                  pop ebp
L00402108: C3                                  ret
L00402109: BB 3C 43 40 00                      mov ebx,0x0040433C
L0040210E: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L00402114: 73 EB                               jnc L00402101
L00402116: 8B 53 04                            mov edx,[ebx+0x4]
L00402119: B9 04 00 00 00                      mov ecx,0x04
L0040211E: 8D 82 00 00 40 00                   lea eax,[edx+0x400000]
L00402124: 8B 92 00 00 40 00                   mov edx,[edx+0x400000]
L0040212A: 03 13                               add edx,[ebx]
L0040212C: 83 C3 08                            add ebx,8
L0040212F: 89 55 C8                            mov [ebp-0x38],edx
L00402132: 8D 55 C8                            lea edx,[ebp-0x38]
L00402135: E8 76 FC FF FF                      call L00401DB0
L0040213A: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L00402140: 72 D4                               jc L00402116
L00402142: A1 54 50 40 00                      mov eax,M00405054
L00402147: 31 DB                               xor ebx,ebx
L00402149: 31 F6                               xor esi,esi
L0040214B: 8D 7D CC                            lea edi,[ebp-0x34]
L0040214E: 85 C0                               test eax,eax
L00402150: 7F 10                               jg L00402162
L00402152: EB AD                               jmp L00402101
L00402154: 83 C6 01                            add esi,1
L00402157: 83 C3 0C                            add ebx,12
L0040215A: 3B 35 54 50 40 00                   cmp esi,M00405054
L00402160: 7D 9F                               jnl L00402101
L00402162: A1 50 50 40 00                      mov eax,M00405050
L00402167: 01 D8                               add eax,ebx
L00402169: 8B 10                               mov edx,[eax]
L0040216B: 85 D2                               test edx,edx
L0040216D: 74 E5                               jz L00402154
L0040216F: C7 44 24 08 1C 00 00 00             mov dword [esp+0x8],0x1C
L00402177: 89 7C 24 04                         mov [esp+0x4],edi
L0040217B: 8B 40 04                            mov eax,[eax+0x4]
L0040217E: 89 04 24                            mov [esp],eax
L00402181: FF 15 84 71 40 00                   call VirtualQuery
L00402187: 83 EC 0C                            sub esp,12
L0040218A: 85 C0                               test eax,eax
L0040218C: 0F 84 E2 00 00 00                   jz L00402274
L00402192: 8D 45 C8                            lea eax,[ebp-0x38]
L00402195: 89 44 24 0C                         mov [esp+0xc],eax
L00402199: A1 50 50 40 00                      mov eax,M00405050
L0040219E: 8B 04 18                            mov eax,[eax+ebx]
L004021A1: 89 44 24 08                         mov [esp+0x8],eax
L004021A5: 8B 45 D8                            mov eax,[ebp-0x28]
L004021A8: 89 44 24 04                         mov [esp+0x4],eax
L004021AC: 8B 45 CC                            mov eax,[ebp-0x34]
L004021AF: 89 04 24                            mov [esp],eax
L004021B2: FF 15 80 71 40 00                   call VirtualProtect
L004021B8: 83 EC 10                            sub esp,16
L004021BB: EB 97                               jmp L00402154
L004021C0: BB 3C 43 40 00                      mov ebx,0x0040433C
L004021C5: 8B 33                               mov esi,[ebx]
L004021C7: 85 F6                               test esi,esi
L004021C9: 0F 85 3F FF FF FF                   jnz L0040210E
L004021CF: 8B 4B 04                            mov ecx,[ebx+0x4]
L004021D2: 85 C9                               test ecx,ecx
L004021D4: 0F 84 C6 FE FF FF                   jz L004020A0
L004021DA: E9 2F FF FF FF                      jmp L0040210E
L004021DF: 0F B7 BF 00 00 40 00                movzx edi,word [edi+0x400000]
L004021E6: 0F B7 F7                            movzx esi,di
L004021E9: 89 F1                               mov ecx,esi
L004021EB: 81 C9 00 00 FF FF                   or ecx,0xFFFF0000
L004021F1: 66 85 FF                            test di,di
L004021F4: 0F 48 F1                            cmovs esi,ecx
L004021F7: 8B 4D B0                            mov ecx,[ebp-0x50]
L004021FA: 29 D6                               sub esi,edx
L004021FC: 81 EE 00 00 40 00                   sub esi,0x00400000
L00402202: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402205: 01 F1                               add ecx,esi
L00402207: 89 4D C4                            mov [ebp-0x3c],ecx
L0040220A: B9 02 00 00 00                      mov ecx,0x02
L0040220F: E8 9C FB FF FF                      call L00401DB0
L00402214: 83 C3 0C                            add ebx,12
L00402217: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L0040221D: 0F 82 94 FE FF FF                   jc L004020B7
L00402223: E9 1A FF FF FF                      jmp L00402142
L00402228: 0F B6 30                            movzx esi,byte [eax]
L0040222B: 89 F7                               mov edi,esi
L0040222D: 81 CF 00 FF FF FF                   or edi,0xFFFFFF00
L00402233: 80 38 00                            cmp byte [eax],0x00
L00402236: 0F 48 F7                            cmovs esi,edi
L00402239: 81 EE 00 00 40 00                   sub esi,0x00400000
L0040223F: 29 D6                               sub esi,edx
L00402241: 01 F1                               add ecx,esi
L00402243: 89 4D C4                            mov [ebp-0x3c],ecx
L00402246: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402249: B9 01 00 00 00                      mov ecx,0x01
L0040224E: E8 5D FB FF FF                      call L00401DB0
L00402253: EB BF                               jmp L00402214
L00402255: 8B 4D B0                            mov ecx,[ebp-0x50]
L00402258: 81 C2 00 00 40 00                   add edx,0x00400000
L0040225E: 29 D1                               sub ecx,edx
L00402260: 03 08                               add ecx,[eax]
L00402262: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402265: 89 4D C4                            mov [ebp-0x3c],ecx
L00402268: B9 04 00 00 00                      mov ecx,0x04
L0040226D: E8 3E FB FF FF                      call L00401DB0
L00402272: EB A0                               jmp L00402214
L00402274: 03 1D 50 50 40 00                   add ebx,M00405050
L0040227A: 8B 43 04                            mov eax,[ebx+0x4]
L0040227D: 89 44 24 08                         mov [esp+0x8],eax
L00402281: 8B 43 08                            mov eax,[ebx+0x8]
L00402284: 8B 40 08                            mov eax,[eax+0x8]
L00402287: C7 04 24 B4 41 40 00                mov dword [esp],0x004041B4
L0040228E: 89 44 24 04                         mov [esp+0x4],eax
L00402292: E8 B9 FA FF FF                      call L00401D50
L00402297: 89 44 24 04                         mov [esp+0x4],eax
L0040229B: C7 04 24 10 42 40 00                mov dword [esp],0x00404210
L004022A2: E8 A9 FA FF FF                      call L00401D50
L004022A7: 90                                  nop
L004022A8: 90                                  nop
L004022A9: 90                                  nop
L004022AA: 90                                  nop
L004022AB: 90                                  nop
L004022AC: 90                                  nop
L004022AD: 90                                  nop
L004022AE: 90                                  nop
L004022AF: 90                                  nop
L004022B0: DB E3                               fninit
L004022B2: C3                                  ret
;; End of Function L00401D50

;; Function L00401DB0
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00401DB0: 55                                  push ebp
L00401DB1: 57                                  push edi
L00401DB2: 56                                  push esi
L00401DB3: 89 C6                               mov esi,eax
L00401DB5: 53                                  push ebx
L00401DB6: 83 EC 4C                            sub esp,76
L00401DB9: 89 4C 24 1C                         mov [esp+0x1c],ecx
L00401DBD: 8B 0D 54 50 40 00                   mov ecx,M00405054
L00401DC3: 89 54 24 18                         mov [esp+0x18],edx
L00401DC7: 85 C9                               test ecx,ecx
L00401DC9: 0F 8E E1 01 00 00                   jng L00401FB0
L00401DCF: 8B 15 50 50 40 00                   mov edx,M00405050
L00401DD5: 31 DB                               xor ebx,ebx
L00401DD7: 8B 42 04                            mov eax,[edx+0x4]
L00401DDA: 39 C6                               cmp esi,eax
L00401DDC: 72 0E                               jc L00401DEC
L00401DDE: 8B 7A 08                            mov edi,[edx+0x8]
L00401DE1: 03 47 08                            add eax,[edi+0x8]
L00401DE4: 39 C6                               cmp esi,eax
L00401DE6: 0F 82 D4 00 00 00                   jc L00401EC0
L00401DEC: 83 C3 01                            add ebx,1
L00401DEF: 83 C2 0C                            add edx,12
L00401DF2: 39 CB                               cmp ebx,ecx
L00401DF4: 75 E1                               jnz L00401DD7
L00401DF6: 89 34 24                            mov [esp],esi
L00401DF9: E8 02 0A 00 00                      call L00402800
L00401DFE: 85 C0                               test eax,eax
L00401E00: 89 C5                               mov ebp,eax
L00401E02: 0F 84 CF 01 00 00                   jz L00401FD7
L00401E08: 8D 0C 5B                            lea ecx,[ebx+ebx*2]
L00401E0B: 8B 1D 50 50 40 00                   mov ebx,M00405050
L00401E11: 8D 3C 8D 00 00 00 00                lea edi,[ecx*4+0x0]
L00401E18: 01 FB                               add ebx,edi
L00401E1A: 89 43 08                            mov [ebx+0x8],eax
L00401E1D: C7 03 00 00 00 00                   mov dword [ebx],0x00
L00401E23: E8 A8 0A 00 00                      call L004028D0
L00401E28: 8D 54 24 24                         lea edx,[esp+0x24]
L00401E2C: 03 45 0C                            add eax,[ebp+0xc]
L00401E2F: 89 43 04                            mov [ebx+0x4],eax
L00401E32: A1 50 50 40 00                      mov eax,M00405050
L00401E37: 89 54 24 04                         mov [esp+0x4],edx
L00401E3B: 8B 1D 84 71 40 00                   mov ebx,M00407184
L00401E41: C7 44 24 08 1C 00 00 00             mov dword [esp+0x8],0x1C
L00401E49: 8B 44 38 04                         mov eax,[eax+edi+0x4]
L00401E4D: 89 54 24 14                         mov [esp+0x14],edx
L00401E51: 89 04 24                            mov [esp],eax
L00401E54: FF D3                               call ebx
L00401E56: 83 EC 0C                            sub esp,12
L00401E59: 85 C0                               test eax,eax
L00401E5B: 8B 54 24 14                         mov edx,[esp+0x14]
L00401E5F: 0F 84 52 01 00 00                   jz L00401FB7
L00401E65: 8B 44 24 38                         mov eax,[esp+0x38]
L00401E69: 83 F8 04                            cmp eax,4
L00401E6C: 0F 85 DE 00 00 00                   jnz L00401F50
L00401E72: 83 05 54 50 40 00 01                add M00405054,1
L00401E79: C7 44 24 08 1C 00 00 00             mov dword [esp+0x8],0x1C
L00401E81: 89 54 24 04                         mov [esp+0x4],edx
L00401E85: 89 34 24                            mov [esp],esi
L00401E88: FF D3                               call ebx
L00401E8A: 83 EC 0C                            sub esp,12
L00401E8D: 85 C0                               test eax,eax
L00401E8F: 0F 84 52 01 00 00                   jz L00401FE7
L00401E95: 8B 44 24 38                         mov eax,[esp+0x38]
L00401E99: 83 F8 04                            cmp eax,4
L00401E9C: 75 32                               jnz L00401ED0
L00401E9E: 8B 44 24 1C                         mov eax,[esp+0x1c]
L00401EA2: 89 34 24                            mov [esp],esi
L00401EA5: 89 44 24 08                         mov [esp+0x8],eax
L00401EA9: 8B 44 24 18                         mov eax,[esp+0x18]
L00401EAD: 89 44 24 04                         mov [esp+0x4],eax
L00401EB1: E8 66 0B 00 00                      call __impmemcpy
L00401EB6: 83 C4 4C                            add esp,76
L00401EB9: 5B                                  pop ebx
L00401EBA: 5E                                  pop esi
L00401EBB: 5F                                  pop edi
L00401EBC: 5D                                  pop ebp
L00401EBD: C3                                  ret
L00401EC0: 8D 54 24 24                         lea edx,[esp+0x24]
L00401EC4: 8B 1D 84 71 40 00                   mov ebx,M00407184
L00401ECA: EB AD                               jmp L00401E79
L00401ED0: 83 F8 40                            cmp eax,64
L00401ED3: 74 C9                               jz L00401E9E
L00401ED5: 8B 44 24 30                         mov eax,[esp+0x30]
L00401ED9: 8D 6C 24 20                         lea ebp,[esp+0x20]
L00401EDD: 8B 1D 80 71 40 00                   mov ebx,M00407180
L00401EE3: 89 6C 24 0C                         mov [esp+0xc],ebp
L00401EE7: C7 44 24 08 40 00 00 00             mov dword [esp+0x8],0x40
L00401EEF: 89 44 24 04                         mov [esp+0x4],eax
L00401EF3: 8B 44 24 24                         mov eax,[esp+0x24]
L00401EF7: 89 04 24                            mov [esp],eax
L00401EFA: FF D3                               call ebx
L00401EFC: 83 EC 10                            sub esp,16
L00401EFF: 8B 44 24 1C                         mov eax,[esp+0x1c]
L00401F03: 89 34 24                            mov [esp],esi
L00401F06: 89 44 24 08                         mov [esp+0x8],eax
L00401F0A: 8B 44 24 18                         mov eax,[esp+0x18]
L00401F0E: 89 44 24 04                         mov [esp+0x4],eax
L00401F12: E8 05 0B 00 00                      call __impmemcpy
L00401F17: 8B 44 24 38                         mov eax,[esp+0x38]
L00401F1B: 83 F8 40                            cmp eax,64
L00401F1E: 74 96                               jz L00401EB6
L00401F20: 83 F8 04                            cmp eax,4
L00401F23: 74 91                               jz L00401EB6
L00401F25: 8B 44 24 20                         mov eax,[esp+0x20]
L00401F29: 89 6C 24 0C                         mov [esp+0xc],ebp
L00401F2D: 89 44 24 08                         mov [esp+0x8],eax
L00401F31: 8B 44 24 30                         mov eax,[esp+0x30]
L00401F35: 89 44 24 04                         mov [esp+0x4],eax
L00401F39: 8B 44 24 24                         mov eax,[esp+0x24]
L00401F3D: 89 04 24                            mov [esp],eax
L00401F40: FF D3                               call ebx
L00401F42: 83 EC 10                            sub esp,16
L00401F45: 83 C4 4C                            add esp,76
L00401F48: 5B                                  pop ebx
L00401F49: 5E                                  pop esi
L00401F4A: 5F                                  pop edi
L00401F4B: 5D                                  pop ebp
L00401F4C: C3                                  ret
L00401F50: 83 F8 40                            cmp eax,64
L00401F53: 0F 84 19 FF FF FF                   jz L00401E72
L00401F59: 8B 44 24 30                         mov eax,[esp+0x30]
L00401F5D: 8B 0D 50 50 40 00                   mov ecx,M00405050
L00401F63: 89 54 24 14                         mov [esp+0x14],edx
L00401F67: C7 44 24 08 40 00 00 00             mov dword [esp+0x8],0x40
L00401F6F: 89 44 24 04                         mov [esp+0x4],eax
L00401F73: 8B 44 24 24                         mov eax,[esp+0x24]
L00401F77: 01 F9                               add ecx,edi
L00401F79: 89 4C 24 0C                         mov [esp+0xc],ecx
L00401F7D: 89 04 24                            mov [esp],eax
L00401F80: FF 15 80 71 40 00                   call VirtualProtect
L00401F86: 83 EC 10                            sub esp,16
L00401F89: 85 C0                               test eax,eax
L00401F8B: 8B 54 24 14                         mov edx,[esp+0x14]
L00401F8F: 0F 85 DD FE FF FF                   jnz L00401E72
L00401F95: FF 15 40 71 40 00                   call GetLastError
L00401F9B: C7 04 24 E8 41 40 00                mov dword [esp],0x004041E8
L00401FA2: 89 44 24 04                         mov [esp+0x4],eax
L00401FA6: E8 A5 FD FF FF                      call L00401D50
L00401FAB: 90                                  nop
L00401FAC: 8D 74 26 00                         lea esi,[esi+0x0]
L00401FB0: 31 DB                               xor ebx,ebx
L00401FB2: E9 3F FE FF FF                      jmp L00401DF6
L00401FB7: A1 50 50 40 00                      mov eax,M00405050
L00401FBC: 8B 44 38 04                         mov eax,[eax+edi+0x4]
L00401FC0: 89 44 24 08                         mov [esp+0x8],eax
L00401FC4: 8B 45 08                            mov eax,[ebp+0x8]
L00401FC7: C7 04 24 B4 41 40 00                mov dword [esp],0x004041B4
L00401FCE: 89 44 24 04                         mov [esp+0x4],eax
L00401FD2: E8 79 FD FF FF                      call L00401D50
L00401FD7: 89 74 24 04                         mov [esp+0x4],esi
L00401FDB: C7 04 24 94 41 40 00                mov dword [esp],0x00404194
L00401FE2: E8 69 FD FF FF                      call L00401D50
L00401FE7: 89 74 24 08                         mov [esp+0x8],esi
L00401FEB: C7 44 24 04 1C 00 00 00             mov dword [esp+0x4],0x1C
L00401FF3: C7 04 24 B4 41 40 00                mov dword [esp],0x004041B4
L00401FFA: E8 51 FD FF FF                      call L00401D50
L00401FFF: 90                                  nop
L00402000: A1 4C 50 40 00                      mov eax,M0040504C
L00402005: 85 C0                               test eax,eax
L00402007: 74 07                               jz L00402010
L00402009: C3                                  ret
L00402010: 55                                  push ebp
L00402011: 89 E5                               mov ebp,esp
L00402013: 57                                  push edi
L00402014: 56                                  push esi
L00402015: 53                                  push ebx
L00402016: 83 EC 5C                            sub esp,92
L00402019: C7 05 4C 50 40 00 01 00 00 00       mov M0040504C,0x01
L00402023: E8 18 08 00 00                      call L00402840
L00402028: 8D 04 40                            lea eax,[eax+eax*2]
L0040202B: 8D 04 85 1E 00 00 00                lea eax,[eax*4+0x1e]
L00402032: 83 E0 F0                            and eax,-16
L00402035: E8 A6 09 00 00                      call L004029E0
L0040203A: C7 05 54 50 40 00 00 00 00 00       mov M00405054,0x00
L00402044: 29 C4                               sub esp,eax
L00402046: 8D 44 24 1F                         lea eax,[esp+0x1f]
L0040204A: 83 E0 F0                            and eax,-16
L0040204D: A3 50 50 40 00                      mov M00405050,eax
L00402052: B8 54 43 40 00                      mov eax,0x00404354
L00402057: 2D 3C 43 40 00                      sub eax,0x0040433C
L0040205C: 83 F8 07                            cmp eax,7
L0040205F: 0F 8E 9C 00 00 00                   jng L00402101
L00402065: 83 F8 0B                            cmp eax,11
L00402068: 0F 8E 52 01 00 00                   jng L004021C0
L0040206E: A1 3C 43 40 00                      mov eax,M0040433C
L00402073: 85 C0                               test eax,eax
L00402075: 0F 85 8E 00 00 00                   jnz L00402109
L0040207B: A1 40 43 40 00                      mov eax,M00404340
L00402080: 85 C0                               test eax,eax
L00402082: 0F 85 81 00 00 00                   jnz L00402109
L00402088: 8B 3D 44 43 40 00                   mov edi,M00404344
L0040208E: BB 48 43 40 00                      mov ebx,0x00404348
L00402093: 85 FF                               test edi,edi
L00402095: 0F 84 2A 01 00 00                   jz L004021C5
L0040209B: BB 3C 43 40 00                      mov ebx,0x0040433C
L004020A0: 8B 43 08                            mov eax,[ebx+0x8]
L004020A3: 83 F8 01                            cmp eax,1
L004020A6: 0F 85 EB 01 00 00                   jnz L00402297
L004020AC: 83 C3 0C                            add ebx,12
L004020AF: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L004020B5: 73 4A                               jnc L00402101
L004020B7: 8B 13                               mov edx,[ebx]
L004020B9: 0F B6 73 08                         movzx esi,byte [ebx+0x8]
L004020BD: 8B 7B 04                            mov edi,[ebx+0x4]
L004020C0: 8B 8A 00 00 40 00                   mov ecx,[edx+0x400000]
L004020C6: 83 FE 10                            cmp esi,16
L004020C9: 8D 87 00 00 40 00                   lea eax,[edi+0x400000]
L004020CF: 89 4D B0                            mov [ebp-0x50],ecx
L004020D2: 0F 84 07 01 00 00                   jz L004021DF
L004020D8: 83 FE 20                            cmp esi,32
L004020DB: 0F 84 74 01 00 00                   jz L00402255
L004020E1: 83 FE 08                            cmp esi,8
L004020E4: 0F 84 3E 01 00 00                   jz L00402228
L004020EA: 89 74 24 04                         mov [esp+0x4],esi
L004020EE: C7 04 24 44 42 40 00                mov dword [esp],0x00404244
L004020F5: C7 45 C4 00 00 00 00                mov dword [ebp-0x3c],0x00
L004020FC: E8 4F FC FF FF                      call L00401D50
L00402101: 8D 65 F4                            lea esp,[ebp-0xc]
L00402104: 5B                                  pop ebx
L00402105: 5E                                  pop esi
L00402106: 5F                                  pop edi
L00402107: 5D                                  pop ebp
L00402108: C3                                  ret
L00402109: BB 3C 43 40 00                      mov ebx,0x0040433C
L0040210E: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L00402114: 73 EB                               jnc L00402101
L00402116: 8B 53 04                            mov edx,[ebx+0x4]
L00402119: B9 04 00 00 00                      mov ecx,0x04
L0040211E: 8D 82 00 00 40 00                   lea eax,[edx+0x400000]
L00402124: 8B 92 00 00 40 00                   mov edx,[edx+0x400000]
L0040212A: 03 13                               add edx,[ebx]
L0040212C: 83 C3 08                            add ebx,8
L0040212F: 89 55 C8                            mov [ebp-0x38],edx
L00402132: 8D 55 C8                            lea edx,[ebp-0x38]
L00402135: E8 76 FC FF FF                      call L00401DB0
L0040213A: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L00402140: 72 D4                               jc L00402116
L00402142: A1 54 50 40 00                      mov eax,M00405054
L00402147: 31 DB                               xor ebx,ebx
L00402149: 31 F6                               xor esi,esi
L0040214B: 8D 7D CC                            lea edi,[ebp-0x34]
L0040214E: 85 C0                               test eax,eax
L00402150: 7F 10                               jg L00402162
L00402152: EB AD                               jmp L00402101
L00402154: 83 C6 01                            add esi,1
L00402157: 83 C3 0C                            add ebx,12
L0040215A: 3B 35 54 50 40 00                   cmp esi,M00405054
L00402160: 7D 9F                               jnl L00402101
L00402162: A1 50 50 40 00                      mov eax,M00405050
L00402167: 01 D8                               add eax,ebx
L00402169: 8B 10                               mov edx,[eax]
L0040216B: 85 D2                               test edx,edx
L0040216D: 74 E5                               jz L00402154
L0040216F: C7 44 24 08 1C 00 00 00             mov dword [esp+0x8],0x1C
L00402177: 89 7C 24 04                         mov [esp+0x4],edi
L0040217B: 8B 40 04                            mov eax,[eax+0x4]
L0040217E: 89 04 24                            mov [esp],eax
L00402181: FF 15 84 71 40 00                   call VirtualQuery
L00402187: 83 EC 0C                            sub esp,12
L0040218A: 85 C0                               test eax,eax
L0040218C: 0F 84 E2 00 00 00                   jz L00402274
L00402192: 8D 45 C8                            lea eax,[ebp-0x38]
L00402195: 89 44 24 0C                         mov [esp+0xc],eax
L00402199: A1 50 50 40 00                      mov eax,M00405050
L0040219E: 8B 04 18                            mov eax,[eax+ebx]
L004021A1: 89 44 24 08                         mov [esp+0x8],eax
L004021A5: 8B 45 D8                            mov eax,[ebp-0x28]
L004021A8: 89 44 24 04                         mov [esp+0x4],eax
L004021AC: 8B 45 CC                            mov eax,[ebp-0x34]
L004021AF: 89 04 24                            mov [esp],eax
L004021B2: FF 15 80 71 40 00                   call VirtualProtect
L004021B8: 83 EC 10                            sub esp,16
L004021BB: EB 97                               jmp L00402154
L004021C0: BB 3C 43 40 00                      mov ebx,0x0040433C
L004021C5: 8B 33                               mov esi,[ebx]
L004021C7: 85 F6                               test esi,esi
L004021C9: 0F 85 3F FF FF FF                   jnz L0040210E
L004021CF: 8B 4B 04                            mov ecx,[ebx+0x4]
L004021D2: 85 C9                               test ecx,ecx
L004021D4: 0F 84 C6 FE FF FF                   jz L004020A0
L004021DA: E9 2F FF FF FF                      jmp L0040210E
L004021DF: 0F B7 BF 00 00 40 00                movzx edi,word [edi+0x400000]
L004021E6: 0F B7 F7                            movzx esi,di
L004021E9: 89 F1                               mov ecx,esi
L004021EB: 81 C9 00 00 FF FF                   or ecx,0xFFFF0000
L004021F1: 66 85 FF                            test di,di
L004021F4: 0F 48 F1                            cmovs esi,ecx
L004021F7: 8B 4D B0                            mov ecx,[ebp-0x50]
L004021FA: 29 D6                               sub esi,edx
L004021FC: 81 EE 00 00 40 00                   sub esi,0x00400000
L00402202: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402205: 01 F1                               add ecx,esi
L00402207: 89 4D C4                            mov [ebp-0x3c],ecx
L0040220A: B9 02 00 00 00                      mov ecx,0x02
L0040220F: E8 9C FB FF FF                      call L00401DB0
L00402214: 83 C3 0C                            add ebx,12
L00402217: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L0040221D: 0F 82 94 FE FF FF                   jc L004020B7
L00402223: E9 1A FF FF FF                      jmp L00402142
L00402228: 0F B6 30                            movzx esi,byte [eax]
L0040222B: 89 F7                               mov edi,esi
L0040222D: 81 CF 00 FF FF FF                   or edi,0xFFFFFF00
L00402233: 80 38 00                            cmp byte [eax],0x00
L00402236: 0F 48 F7                            cmovs esi,edi
L00402239: 81 EE 00 00 40 00                   sub esi,0x00400000
L0040223F: 29 D6                               sub esi,edx
L00402241: 01 F1                               add ecx,esi
L00402243: 89 4D C4                            mov [ebp-0x3c],ecx
L00402246: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402249: B9 01 00 00 00                      mov ecx,0x01
L0040224E: E8 5D FB FF FF                      call L00401DB0
L00402253: EB BF                               jmp L00402214
L00402255: 8B 4D B0                            mov ecx,[ebp-0x50]
L00402258: 81 C2 00 00 40 00                   add edx,0x00400000
L0040225E: 29 D1                               sub ecx,edx
L00402260: 03 08                               add ecx,[eax]
L00402262: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402265: 89 4D C4                            mov [ebp-0x3c],ecx
L00402268: B9 04 00 00 00                      mov ecx,0x04
L0040226D: E8 3E FB FF FF                      call L00401DB0
L00402272: EB A0                               jmp L00402214
L00402274: 03 1D 50 50 40 00                   add ebx,M00405050
L0040227A: 8B 43 04                            mov eax,[ebx+0x4]
L0040227D: 89 44 24 08                         mov [esp+0x8],eax
L00402281: 8B 43 08                            mov eax,[ebx+0x8]
L00402284: 8B 40 08                            mov eax,[eax+0x8]
L00402287: C7 04 24 B4 41 40 00                mov dword [esp],0x004041B4
L0040228E: 89 44 24 04                         mov [esp+0x4],eax
L00402292: E8 B9 FA FF FF                      call L00401D50
L00402297: 89 44 24 04                         mov [esp+0x4],eax
L0040229B: C7 04 24 10 42 40 00                mov dword [esp],0x00404210
L004022A2: E8 A9 FA FF FF                      call L00401D50
L004022A7: 90                                  nop
L004022A8: 90                                  nop
L004022A9: 90                                  nop
L004022AA: 90                                  nop
L004022AB: 90                                  nop
L004022AC: 90                                  nop
L004022AD: 90                                  nop
L004022AE: 90                                  nop
L004022AF: 90                                  nop
L004022B0: DB E3                               fninit
L004022B2: C3                                  ret
;; End of Function L00401DB0

;; Function L00402000
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00402000: A1 4C 50 40 00                      mov eax,M0040504C
L00402005: 85 C0                               test eax,eax
L00402007: 74 07                               jz L00402010
L00402009: C3                                  ret
L00402010: 55                                  push ebp
L00402011: 89 E5                               mov ebp,esp
L00402013: 57                                  push edi
L00402014: 56                                  push esi
L00402015: 53                                  push ebx
L00402016: 83 EC 5C                            sub esp,92
L00402019: C7 05 4C 50 40 00 01 00 00 00       mov M0040504C,0x01
L00402023: E8 18 08 00 00                      call L00402840
L00402028: 8D 04 40                            lea eax,[eax+eax*2]
L0040202B: 8D 04 85 1E 00 00 00                lea eax,[eax*4+0x1e]
L00402032: 83 E0 F0                            and eax,-16
L00402035: E8 A6 09 00 00                      call L004029E0
L0040203A: C7 05 54 50 40 00 00 00 00 00       mov M00405054,0x00
L00402044: 29 C4                               sub esp,eax
L00402046: 8D 44 24 1F                         lea eax,[esp+0x1f]
L0040204A: 83 E0 F0                            and eax,-16
L0040204D: A3 50 50 40 00                      mov M00405050,eax
L00402052: B8 54 43 40 00                      mov eax,0x00404354
L00402057: 2D 3C 43 40 00                      sub eax,0x0040433C
L0040205C: 83 F8 07                            cmp eax,7
L0040205F: 0F 8E 9C 00 00 00                   jng L00402101
L00402065: 83 F8 0B                            cmp eax,11
L00402068: 0F 8E 52 01 00 00                   jng L004021C0
L0040206E: A1 3C 43 40 00                      mov eax,M0040433C
L00402073: 85 C0                               test eax,eax
L00402075: 0F 85 8E 00 00 00                   jnz L00402109
L0040207B: A1 40 43 40 00                      mov eax,M00404340
L00402080: 85 C0                               test eax,eax
L00402082: 0F 85 81 00 00 00                   jnz L00402109
L00402088: 8B 3D 44 43 40 00                   mov edi,M00404344
L0040208E: BB 48 43 40 00                      mov ebx,0x00404348
L00402093: 85 FF                               test edi,edi
L00402095: 0F 84 2A 01 00 00                   jz L004021C5
L0040209B: BB 3C 43 40 00                      mov ebx,0x0040433C
L004020A0: 8B 43 08                            mov eax,[ebx+0x8]
L004020A3: 83 F8 01                            cmp eax,1
L004020A6: 0F 85 EB 01 00 00                   jnz L00402297
L004020AC: 83 C3 0C                            add ebx,12
L004020AF: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L004020B5: 73 4A                               jnc L00402101
L004020B7: 8B 13                               mov edx,[ebx]
L004020B9: 0F B6 73 08                         movzx esi,byte [ebx+0x8]
L004020BD: 8B 7B 04                            mov edi,[ebx+0x4]
L004020C0: 8B 8A 00 00 40 00                   mov ecx,[edx+0x400000]
L004020C6: 83 FE 10                            cmp esi,16
L004020C9: 8D 87 00 00 40 00                   lea eax,[edi+0x400000]
L004020CF: 89 4D B0                            mov [ebp-0x50],ecx
L004020D2: 0F 84 07 01 00 00                   jz L004021DF
L004020D8: 83 FE 20                            cmp esi,32
L004020DB: 0F 84 74 01 00 00                   jz L00402255
L004020E1: 83 FE 08                            cmp esi,8
L004020E4: 0F 84 3E 01 00 00                   jz L00402228
L004020EA: 89 74 24 04                         mov [esp+0x4],esi
L004020EE: C7 04 24 44 42 40 00                mov dword [esp],0x00404244
L004020F5: C7 45 C4 00 00 00 00                mov dword [ebp-0x3c],0x00
L004020FC: E8 4F FC FF FF                      call L00401D50
L00402101: 8D 65 F4                            lea esp,[ebp-0xc]
L00402104: 5B                                  pop ebx
L00402105: 5E                                  pop esi
L00402106: 5F                                  pop edi
L00402107: 5D                                  pop ebp
L00402108: C3                                  ret
L00402109: BB 3C 43 40 00                      mov ebx,0x0040433C
L0040210E: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L00402114: 73 EB                               jnc L00402101
L00402116: 8B 53 04                            mov edx,[ebx+0x4]
L00402119: B9 04 00 00 00                      mov ecx,0x04
L0040211E: 8D 82 00 00 40 00                   lea eax,[edx+0x400000]
L00402124: 8B 92 00 00 40 00                   mov edx,[edx+0x400000]
L0040212A: 03 13                               add edx,[ebx]
L0040212C: 83 C3 08                            add ebx,8
L0040212F: 89 55 C8                            mov [ebp-0x38],edx
L00402132: 8D 55 C8                            lea edx,[ebp-0x38]
L00402135: E8 76 FC FF FF                      call L00401DB0
L0040213A: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L00402140: 72 D4                               jc L00402116
L00402142: A1 54 50 40 00                      mov eax,M00405054
L00402147: 31 DB                               xor ebx,ebx
L00402149: 31 F6                               xor esi,esi
L0040214B: 8D 7D CC                            lea edi,[ebp-0x34]
L0040214E: 85 C0                               test eax,eax
L00402150: 7F 10                               jg L00402162
L00402152: EB AD                               jmp L00402101
L00402154: 83 C6 01                            add esi,1
L00402157: 83 C3 0C                            add ebx,12
L0040215A: 3B 35 54 50 40 00                   cmp esi,M00405054
L00402160: 7D 9F                               jnl L00402101
L00402162: A1 50 50 40 00                      mov eax,M00405050
L00402167: 01 D8                               add eax,ebx
L00402169: 8B 10                               mov edx,[eax]
L0040216B: 85 D2                               test edx,edx
L0040216D: 74 E5                               jz L00402154
L0040216F: C7 44 24 08 1C 00 00 00             mov dword [esp+0x8],0x1C
L00402177: 89 7C 24 04                         mov [esp+0x4],edi
L0040217B: 8B 40 04                            mov eax,[eax+0x4]
L0040217E: 89 04 24                            mov [esp],eax
L00402181: FF 15 84 71 40 00                   call VirtualQuery
L00402187: 83 EC 0C                            sub esp,12
L0040218A: 85 C0                               test eax,eax
L0040218C: 0F 84 E2 00 00 00                   jz L00402274
L00402192: 8D 45 C8                            lea eax,[ebp-0x38]
L00402195: 89 44 24 0C                         mov [esp+0xc],eax
L00402199: A1 50 50 40 00                      mov eax,M00405050
L0040219E: 8B 04 18                            mov eax,[eax+ebx]
L004021A1: 89 44 24 08                         mov [esp+0x8],eax
L004021A5: 8B 45 D8                            mov eax,[ebp-0x28]
L004021A8: 89 44 24 04                         mov [esp+0x4],eax
L004021AC: 8B 45 CC                            mov eax,[ebp-0x34]
L004021AF: 89 04 24                            mov [esp],eax
L004021B2: FF 15 80 71 40 00                   call VirtualProtect
L004021B8: 83 EC 10                            sub esp,16
L004021BB: EB 97                               jmp L00402154
L004021C0: BB 3C 43 40 00                      mov ebx,0x0040433C
L004021C5: 8B 33                               mov esi,[ebx]
L004021C7: 85 F6                               test esi,esi
L004021C9: 0F 85 3F FF FF FF                   jnz L0040210E
L004021CF: 8B 4B 04                            mov ecx,[ebx+0x4]
L004021D2: 85 C9                               test ecx,ecx
L004021D4: 0F 84 C6 FE FF FF                   jz L004020A0
L004021DA: E9 2F FF FF FF                      jmp L0040210E
L004021DF: 0F B7 BF 00 00 40 00                movzx edi,word [edi+0x400000]
L004021E6: 0F B7 F7                            movzx esi,di
L004021E9: 89 F1                               mov ecx,esi
L004021EB: 81 C9 00 00 FF FF                   or ecx,0xFFFF0000
L004021F1: 66 85 FF                            test di,di
L004021F4: 0F 48 F1                            cmovs esi,ecx
L004021F7: 8B 4D B0                            mov ecx,[ebp-0x50]
L004021FA: 29 D6                               sub esi,edx
L004021FC: 81 EE 00 00 40 00                   sub esi,0x00400000
L00402202: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402205: 01 F1                               add ecx,esi
L00402207: 89 4D C4                            mov [ebp-0x3c],ecx
L0040220A: B9 02 00 00 00                      mov ecx,0x02
L0040220F: E8 9C FB FF FF                      call L00401DB0
L00402214: 83 C3 0C                            add ebx,12
L00402217: 81 FB 54 43 40 00                   cmp ebx,0x00404354
L0040221D: 0F 82 94 FE FF FF                   jc L004020B7
L00402223: E9 1A FF FF FF                      jmp L00402142
L00402228: 0F B6 30                            movzx esi,byte [eax]
L0040222B: 89 F7                               mov edi,esi
L0040222D: 81 CF 00 FF FF FF                   or edi,0xFFFFFF00
L00402233: 80 38 00                            cmp byte [eax],0x00
L00402236: 0F 48 F7                            cmovs esi,edi
L00402239: 81 EE 00 00 40 00                   sub esi,0x00400000
L0040223F: 29 D6                               sub esi,edx
L00402241: 01 F1                               add ecx,esi
L00402243: 89 4D C4                            mov [ebp-0x3c],ecx
L00402246: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402249: B9 01 00 00 00                      mov ecx,0x01
L0040224E: E8 5D FB FF FF                      call L00401DB0
L00402253: EB BF                               jmp L00402214
L00402255: 8B 4D B0                            mov ecx,[ebp-0x50]
L00402258: 81 C2 00 00 40 00                   add edx,0x00400000
L0040225E: 29 D1                               sub ecx,edx
L00402260: 03 08                               add ecx,[eax]
L00402262: 8D 55 C4                            lea edx,[ebp-0x3c]
L00402265: 89 4D C4                            mov [ebp-0x3c],ecx
L00402268: B9 04 00 00 00                      mov ecx,0x04
L0040226D: E8 3E FB FF FF                      call L00401DB0
L00402272: EB A0                               jmp L00402214
L00402274: 03 1D 50 50 40 00                   add ebx,M00405050
L0040227A: 8B 43 04                            mov eax,[ebx+0x4]
L0040227D: 89 44 24 08                         mov [esp+0x8],eax
L00402281: 8B 43 08                            mov eax,[ebx+0x8]
L00402284: 8B 40 08                            mov eax,[eax+0x8]
L00402287: C7 04 24 B4 41 40 00                mov dword [esp],0x004041B4
L0040228E: 89 44 24 04                         mov [esp+0x4],eax
L00402292: E8 B9 FA FF FF                      call L00401D50
L00402297: 89 44 24 04                         mov [esp+0x4],eax
L0040229B: C7 04 24 10 42 40 00                mov dword [esp],0x00404210
L004022A2: E8 A9 FA FF FF                      call L00401D50
L004022A7: 90                                  nop
L004022A8: 90                                  nop
L004022A9: 90                                  nop
L004022AA: 90                                  nop
L004022AB: 90                                  nop
L004022AC: 90                                  nop
L004022AD: 90                                  nop
L004022AE: 90                                  nop
L004022AF: 90                                  nop
L004022B0: DB E3                               fninit
L004022B2: C3                                  ret
;; End of Function L00402000

;; Function L004022B0
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L004022B0: DB E3                               fninit
L004022B2: C3                                  ret
;; End of Function L004022B0

;; Function L00402340
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L004022F0: 53                                  push ebx
L004022F1: 83 EC 18                            sub esp,24
L004022F4: 8B 1D 50 2B 40 00                   mov ebx,L00402B50
L004022FA: 83 FB FF                            cmp ebx,-1
L004022FD: 74 24                               jz L00402323
L004022FF: 85 DB                               test ebx,ebx
L00402301: 74 0F                               jz L00402312
L00402303: FF 14 9D 50 2B 40 00                call dword [ebx*4+0x402b50]
L0040230A: 83 EB 01                            sub ebx,1
L0040230D: 8D 76 00                            lea esi,[esi+0x0]
L00402310: 75 F1                               jnz L00402303
L00402312: C7 04 24 C0 22 40 00                mov dword [esp],0x004022C0
L00402319: E8 E2 F7 FF FF                      call L00401B00
L0040231E: 83 C4 18                            add esp,24
L00402321: 5B                                  pop ebx
L00402322: C3                                  ret
L00402323: 31 DB                               xor ebx,ebx
L00402325: EB 02                               jmp L00402329
L00402327: 89 C3                               mov ebx,eax
L00402329: 8D 43 01                            lea eax,[ebx+0x1]
L0040232C: 8B 14 85 50 2B 40 00                mov edx,[eax*4+0x402b50]
L00402333: 85 D2                               test edx,edx
L00402335: 75 F0                               jnz L00402327
L00402337: EB C6                               jmp L004022FF
L00402340: 8B 0D 58 50 40 00                   mov ecx,M00405058
L00402346: 85 C9                               test ecx,ecx
L00402348: 74 06                               jz L00402350
L0040234A: F3 C3                               ret
L00402350: C7 05 58 50 40 00 01 00 00 00       mov M00405058,0x01
L0040235A: EB 94                               jmp L004022F0
;; End of Function L00402340

;; Function L00402360
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00402360: 83 EC 4C                            sub esp,76
L00402363: A1 28 30 40 00                      mov eax,M00403028
L00402368: 89 5C 24 3C                         mov [esp+0x3c],ebx
L0040236C: 89 74 24 40                         mov [esp+0x40],esi
L00402370: 89 7C 24 44                         mov [esp+0x44],edi
L00402374: 3D 4E E6 40 BB                      cmp eax,0xBB40E64E
L00402379: 89 6C 24 48                         mov [esp+0x48],ebp
L0040237D: C7 44 24 20 00 00 00 00             mov dword [esp+0x20],0x00
L00402385: C7 44 24 24 00 00 00 00             mov dword [esp+0x24],0x00
L0040238D: 74 21                               jz L004023B0
L0040238F: F7 D0                               not eax
L00402391: A3 2C 30 40 00                      mov M0040302C,eax
L00402396: 8B 5C 24 3C                         mov ebx,[esp+0x3c]
L0040239A: 8B 74 24 40                         mov esi,[esp+0x40]
L0040239E: 8B 7C 24 44                         mov edi,[esp+0x44]
L004023A2: 8B 6C 24 48                         mov ebp,[esp+0x48]
L004023A6: 83 C4 4C                            add esp,76
L004023A9: C3                                  ret
L004023B0: 8D 44 24 20                         lea eax,[esp+0x20]
L004023B4: 89 04 24                            mov [esp],eax
L004023B7: FF 15 50 71 40 00                   call GetSystemTimeAsFileTime
L004023BD: 83 EC 04                            sub esp,4
L004023C0: 8B 7C 24 20                         mov edi,[esp+0x20]
L004023C4: 8B 6C 24 24                         mov ebp,[esp+0x24]
L004023C8: FF 15 38 71 40 00                   call GetCurrentProcessId
L004023CE: 31 EF                               xor edi,ebp
L004023D0: 89 C6                               mov esi,eax
L004023D2: FF 15 3C 71 40 00                   call GetCurrentThreadId
L004023D8: 89 C3                               mov ebx,eax
L004023DA: FF 15 54 71 40 00                   call GetTickCount
L004023E0: 89 44 24 1C                         mov [esp+0x1c],eax
L004023E4: 8D 44 24 28                         lea eax,[esp+0x28]
L004023E8: 89 04 24                            mov [esp],eax
L004023EB: FF 15 68 71 40 00                   call QueryPerformanceCounter
L004023F1: 83 EC 04                            sub esp,4
L004023F4: 33 7C 24 28                         xor edi,[esp+0x28]
L004023F8: 33 7C 24 2C                         xor edi,[esp+0x2c]
L004023FC: 31 F7                               xor edi,esi
L004023FE: 31 DF                               xor edi,ebx
L00402400: 33 7C 24 1C                         xor edi,[esp+0x1c]
L00402404: 81 FF 4E E6 40 BB                   cmp edi,0xBB40E64E
L0040240A: 74 14                               jz L00402420
L0040240C: 89 F8                               mov eax,edi
L0040240E: F7 D0                               not eax
L00402410: 89 3D 28 30 40 00                   mov M00403028,edi
L00402416: A3 2C 30 40 00                      mov M0040302C,eax
L0040241B: E9 76 FF FF FF                      jmp L00402396
L00402420: B8 B0 19 BF 44                      mov eax,0x44BF19B0
L00402425: BF 4F E6 40 BB                      mov edi,0xBB40E64F
L0040242A: EB E4                               jmp L00402410
;; End of Function L00402360

;; Function L00402700
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00402700: 8B 54 24 04                         mov edx,[esp+0x4]
L00402704: 31 C0                               xor eax,eax
L00402706: 66 81 3A 4D 5A                      cmp word [edx],0x5A4D
L0040270B: 74 03                               jz L00402710
L0040270D: F3 C3                               ret
L00402710: 03 52 3C                            add edx,[edx+0x3c]
L00402713: 81 3A 50 45 00 00                   cmp dword [edx],0x4550
L00402719: 75 F2                               jnz L0040270D
L0040271B: 31 C0                               xor eax,eax
L0040271D: 66 81 7A 18 0B 01                   cmp word [edx+0x18],0x010B
L00402723: 0F 94 C0                            setz al
L00402726: C3                                  ret
;; End of Function L00402700

;; Function L00402730
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00402730: 56                                  push esi
L00402731: 53                                  push ebx
L00402732: 8B 54 24 0C                         mov edx,[esp+0xc]
L00402736: 8B 5C 24 10                         mov ebx,[esp+0x10]
L0040273A: 03 52 3C                            add edx,[edx+0x3c]
L0040273D: 0F B7 72 06                         movzx esi,word [edx+0x6]
L00402741: 0F B7 42 14                         movzx eax,word [edx+0x14]
L00402745: 85 F6                               test esi,esi
L00402747: 8D 44 02 18                         lea eax,[edx+eax+0x18]
L0040274B: 74 1B                               jz L00402768
L0040274D: 31 D2                               xor edx,edx
L0040274F: 90                                  nop
L00402750: 8B 48 0C                            mov ecx,[eax+0xc]
L00402753: 39 D9                               cmp ecx,ebx
L00402755: 77 07                               ja L0040275E
L00402757: 03 48 08                            add ecx,[eax+0x8]
L0040275A: 39 CB                               cmp ebx,ecx
L0040275C: 72 0C                               jc L0040276A
L0040275E: 83 C2 01                            add edx,1
L00402761: 83 C0 28                            add eax,40
L00402764: 39 F2                               cmp edx,esi
L00402766: 72 E8                               jc L00402750
L00402768: 31 C0                               xor eax,eax
L0040276A: 5B                                  pop ebx
L0040276B: 5E                                  pop esi
L0040276C: C3                                  ret
;; End of Function L00402730

;; Function L00402800
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00402800: 83 EC 08                            sub esp,8
L00402803: C7 04 24 00 00 40 00                mov dword [esp],0x00400000
L0040280A: E8 F1 FE FF FF                      call L00402700
L0040280F: 89 C2                               mov edx,eax
L00402811: 31 C0                               xor eax,eax
L00402813: 85 D2                               test edx,edx
L00402815: 74 19                               jz L00402830
L00402817: 8B 44 24 0C                         mov eax,[esp+0xc]
L0040281B: C7 04 24 00 00 40 00                mov dword [esp],0x00400000
L00402822: 2D 00 00 40 00                      sub eax,0x00400000
L00402827: 89 44 24 04                         mov [esp+0x4],eax
L0040282B: E8 00 FF FF FF                      call L00402730
L00402830: 83 C4 08                            add esp,8
L00402833: C3                                  ret
;; End of Function L00402800

;; Function L00402840
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L00402840: 83 EC 04                            sub esp,4
L00402843: C7 04 24 00 00 40 00                mov dword [esp],0x00400000
L0040284A: E8 B1 FE FF FF                      call L00402700
L0040284F: 31 D2                               xor edx,edx
L00402851: 85 C0                               test eax,eax
L00402853: 74 0C                               jz L00402861
L00402855: A1 3C 00 40 00                      mov eax,M0040003C
L0040285A: 0F B7 90 06 00 40 00                movzx edx,word [eax+0x400006]
L00402861: 89 D0                               mov eax,edx
L00402863: 83 C4 04                            add esp,4
L00402866: C3                                  ret
;; End of Function L00402840

;; Function L004028D0
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L004028D0: 83 EC 04                            sub esp,4
L004028D3: C7 04 24 00 00 40 00                mov dword [esp],0x00400000
L004028DA: E8 21 FE FF FF                      call L00402700
L004028DF: 31 D2                               xor edx,edx
L004028E1: 85 C0                               test eax,eax
L004028E3: B8 00 00 40 00                      mov eax,0x00400000
L004028E8: 0F 45 D0                            cmovnz edx,eax
L004028EB: 83 C4 04                            add esp,4
L004028EE: 89 D0                               mov eax,edx
L004028F0: C3                                  ret
;; End of Function L004028D0

;; Function L004029E0
ft = FT_UNKNOWN, SizeOfStackArgs == -1
L004029E0: 51                                  push ecx
L004029E1: 50                                  push eax
L004029E2: 3D 00 10 00 00                      cmp eax,0x1000
L004029E7: 8D 4C 24 0C                         lea ecx,[esp+0xc]
L004029EB: 72 15                               jc L00402A02
L004029ED: 81 E9 00 10 00 00                   sub ecx,0x1000
L004029F3: 83 09 00                            or dword [ecx],0
L004029F6: 2D 00 10 00 00                      sub eax,0x1000
L004029FB: 3D 00 10 00 00                      cmp eax,0x1000
L00402A00: 77 EB                               ja L004029ED
L00402A02: 29 C1                               sub ecx,eax
L00402A04: 83 09 00                            or dword [ecx],0
L00402A07: 58                                  pop eax
L00402A08: 59                                  pop ecx
L00402A09: C3                                  ret
;; End of Function L004029E0

;; Function __impmemcpy @ L00402A1C
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A1C: FF 25 EC 71 40 00                   jmp memcpy
;; End of Function __impmemcpy @ L00402A1C

;; Function __impmalloc @ L00402A60
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A60: FF 25 E4 71 40 00                   jmp malloc
;; End of Function __impmalloc @ L00402A60

;; Function __impstrlen @ L00402A68
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A68: FF 25 08 72 40 00                   jmp strlen
;; End of Function __impstrlen @ L00402A68

;; Function __imp_cexit @ L00402A70
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A70: FF 25 AC 71 40 00                   jmp _cexit
;; End of Function __imp_cexit @ L00402A70

;; Function __imp_amsg_exit @ L00402A78
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A78: FF 25 A8 71 40 00                   jmp _amsg_exit
;; End of Function __imp_amsg_exit @ L00402A78

;; Function __imp_initterm @ L00402A80
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A80: FF 25 B4 71 40 00                   jmp _initterm
;; End of Function __imp_initterm @ L00402A80

;; Function __impexit @ L00402A88
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A88: FF 25 D4 71 40 00                   jmp exit
;; End of Function __impexit @ L00402A88

;; Function __imp_strset @ L00402A90
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A90: FF 25 C4 71 40 00                   jmp _strset
;; End of Function __imp_strset @ L00402A90

;; Function __impmemcmp @ L00402A98
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402A98: FF 25 E8 71 40 00                   jmp memcmp
;; End of Function __impmemcmp @ L00402A98

;; Function __impmemset @ L00402AA0
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AA0: FF 25 F0 71 40 00                   jmp memset
;; End of Function __impmemset @ L00402AA0

;; Function __impstrcat @ L00402AA8
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AA8: FF 25 00 72 40 00                   jmp strcat
;; End of Function __impstrcat @ L00402AA8

;; Function __impstrcmp @ L00402AB0
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AB0: FF 25 04 72 40 00                   jmp strcmp
;; End of Function __impstrcmp @ L00402AB0

;; Function __impstrncpy @ L00402AB8
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AB8: FF 25 10 72 40 00                   jmp strncpy
;; End of Function __impstrncpy @ L00402AB8

;; Function __impprintf @ L00402AC0
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AC0: FF 25 F4 71 40 00                   jmp printf
;; End of Function __impprintf @ L00402AC0

;; Function __impputs @ L00402AC8
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AC8: FF 25 F8 71 40 00                   jmp puts
;; End of Function __impputs @ L00402AC8

;; Function __imp_lock @ L00402AD0
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AD0: FF 25 BC 71 40 00                   jmp _lock
;; End of Function __imp_lock @ L00402AD0

;; Function __imp__dllonexit @ L00402AD8
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AD8: FF 25 8C 71 40 00                   jmp __dllonexit
;; End of Function __imp__dllonexit @ L00402AD8

;; Function __imp_unlock @ L00402AE0
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402AE0: FF 25 C8 71 40 00                   jmp _unlock
;; End of Function __imp_unlock @ L00402AE0

;; Function __impfwrite @ L00402B00
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402B00: FF 25 E0 71 40 00                   jmp fwrite
;; End of Function __impfwrite @ L00402B00

;; Function __impvfprintf @ L00402B08
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402B08: FF 25 14 72 40 00                   jmp vfprintf
;; End of Function __impvfprintf @ L00402B08

;; Function __impabort @ L00402B10
ft = FT_JUMPERFUNC, SizeOfStackArgs == -1
L00402B10: FF 25 CC 71 40 00                   jmp abort
;; End of Function __impabort @ L00402B10

;; Function L00403024
ft = FT_UNKNOWN, SizeOfStackArgs == -1
;; End of Function L00403024

